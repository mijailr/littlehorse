"use strict";(self.webpackChunklh_site=self.webpackChunklh_site||[]).push([[9371],{9084:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>d,toc:()=>h});var a=o(4848),i=o(8453),t=o(1470),l=o(9365);const r={},s="Conditionals and Loops",d={id:"developer-guide/wfspec-development/conditionals",title:"Conditionals and Loops",description:"Conditional Branching is a control flow mechanismm in LittleHorse that is very similar to if/else in programming. It allows you to execute different branches of a WfSpec (like a program) depending on the values of your Variables.",source:"@site/docs/05-developer-guide/08-wfspec-development/02-conditionals.md",sourceDirName:"05-developer-guide/08-wfspec-development",slug:"/developer-guide/wfspec-development/conditionals",permalink:"/docs/developer-guide/wfspec-development/conditionals",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Basics",permalink:"/docs/developer-guide/wfspec-development/basics"},next:{title:"Mutating Variables",permalink:"/docs/developer-guide/wfspec-development/mutating-variables"}},c={},h=[{value:"The <code>WorkflowCondition</code>",id:"the-workflowcondition",level:2},{value:"IN Conditional",id:"in-conditional",level:3},{value:"If Statements",id:"if-statements",level:2},{value:"More than one condition for the If Statement",id:"more-than-one-condition-for-the-if-statement",level:3},{value:"If Else Statements",id:"if-else-statements",level:2},{value:"While Loops",id:"while-loops",level:2}];function f(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"conditionals-and-loops",children:"Conditionals and Loops"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"/docs/concepts/conditionals",children:"Conditional Branching"})," is a control flow mechanismm in LittleHorse that is very similar to ",(0,a.jsx)(n.code,{children:"if/else"})," in programming. It allows you to execute different branches of a ",(0,a.jsx)(n.code,{children:"WfSpec"})," (like a program) depending on the values of your ",(0,a.jsx)(n.code,{children:"Variable"}),"s."]}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"WorkflowThread"})," structs and objects have a ",(0,a.jsx)(n.code,{children:"doIf()"})," and ",(0,a.jsx)(n.code,{children:"doIfElse()"})," function which enable this feature. These functions take in:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["A ",(0,a.jsx)(n.code,{children:"WorkflowCondition"})," struct or object, which is similar to the expression that goes inside the ",(0,a.jsx)(n.code,{children:"if (/* right here */)"})]}),"\n",(0,a.jsxs)(n.li,{children:["A lambda function or ",(0,a.jsx)(n.code,{children:"WorkflowThread"})," which executes the logic for the ",(0,a.jsx)(n.code,{children:"if"})," branch."]}),"\n",(0,a.jsxs)(n.li,{children:["Another lambda function for the ",(0,a.jsx)(n.code,{children:"else"})," branch (only for ",(0,a.jsx)(n.code,{children:"doIfElse()"}),")"]}),"\n"]}),"\n",(0,a.jsxs)(n.h2,{id:"the-workflowcondition",children:["The ",(0,a.jsx)(n.code,{children:"WorkflowCondition"})]}),"\n",(0,a.jsxs)(n.p,{children:["In an ",(0,a.jsx)(n.code,{children:"if"})," statement, the expression is what goes between the ",(0,a.jsx)(n.code,{children:"()"})," parentheses. It is a boolean expression that evaluates to ",(0,a.jsx)(n.code,{children:"true"})," or ",(0,a.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["In LittleHorse, you can create an expression using ",(0,a.jsx)(n.code,{children:"WorkflowThread#condition"})," in any of our SDK's. The method or function takes three parameters:"]}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["The ",(0,a.jsx)(n.code,{children:"LHS"})]}),"\n",(0,a.jsx)(n.li,{children:"The Comparator"}),"\n",(0,a.jsxs)(n.li,{children:["The ",(0,a.jsx)(n.code,{children:"RHS"})]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["Please review the Conditionals Concepts Documentation ",(0,a.jsx)(n.a,{href:"/docs/concepts/conditionals",children:"here"})," for a refresher on the various Comparator types. They are listed below:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.code,{children:"LESS_THAN"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.code,{children:"GREATER_THAN"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.code,{children:"LESS_THAN_EQ"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.code,{children:"GREATER_THAN_EQ"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.code,{children:"EQUALS"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.code,{children:"NOT_EQUALS"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.code,{children:"IN"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.code,{children:"NOT_IN"})}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"LHS"})," and the ",(0,a.jsx)(n.code,{children:"RHS"})," can be set in two ways:"]}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"A literal value."}),"\n",(0,a.jsxs)(n.li,{children:["A ",(0,a.jsx)(n.code,{children:"WfRunVariable"}),", which means that the value of that ",(0,a.jsx)(n.code,{children:"Variable"})," in the ",(0,a.jsx)(n.code,{children:"WfRun"})," is used."]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["The following is equivalent to ",(0,a.jsx)(n.code,{children:"foo < 3"}),":"]}),"\n","\n",(0,a.jsxs)(t.A,{children:[(0,a.jsx)(l.A,{value:"java",label:"Java",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'\nimport io.littlehorse.sdk.common.proto.Comparator;\n// ...\n\nWfRunVariable foo = wf.addVariable("foo", VariableType.INT);\n\nWorkflowCondition condition = wf.condition(\n    foo,\n    Comparator.LESS_THAN,\n    3\n);\n'})})}),(0,a.jsx)(l.A,{value:"go",label:"Go",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",children:'foo := wf.AddVariable("foo", model.VariableType_INT)\n\ncondition := wf.Condition(\n    foo,\n    model.Comparator_LESS_THAN,\n    3,\n)\n'})})}),(0,a.jsx)(l.A,{value:"python",label:"Python",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'def entrypoint(wf: WorkflowThread) -> None:\n    foo = wf.add_variable("foo", VariableType.INT)\n    condition = wf.condition(foo, Comparator.LESS_THAN, 3)\n'})})})]}),"\n",(0,a.jsx)(n.h3,{id:"in-conditional",children:"IN Conditional"}),"\n",(0,a.jsxs)(n.p,{children:["For the ",(0,a.jsx)(n.code,{children:"IN"})," conditional you have to provide either a variable or a literal value on the ",(0,a.jsx)(n.code,{children:"LHS"})," that might be contained on a collection of values that is provided on the ",(0,a.jsx)(n.code,{children:"RHS"}),"."]}),"\n",(0,a.jsxs)(t.A,{children:[(0,a.jsx)(l.A,{value:"java",label:"Java",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'\nimport io.littlehorse.sdk.common.proto.Comparator;\n// ...\n\nWfRunVariable foo = wf.addVariable("foo", VariableType.INT);\n\nWorkflowCondition condition = wf.condition(\n    foo,\n    Comparator.IN,\n    [2, 3, 4]\n);\n'})})}),(0,a.jsx)(l.A,{value:"go",label:"Go",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",children:'foo := wf.AddVariable("foo", model.VariableType_INT)\n\ncondition := wf.Condition(\n    foo,\n    model.IN,\n    [3]int{1,2,3},\n)\n'})})}),(0,a.jsx)(l.A,{value:"python",label:"Python",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'def entrypoint(wf: WorkflowThread) -> None:\n    foo = wf.add_variable("foo", VariableType.INT)\n    condition = wf.condition(foo, Comparator.IN, [1, 2, 3])\n'})})})]}),"\n",(0,a.jsx)(n.h2,{id:"if-statements",children:"If Statements"}),"\n",(0,a.jsxs)(n.p,{children:["To do an ",(0,a.jsx)(n.code,{children:"if"})," statement, you use ",(0,a.jsx)(n.code,{children:"WorkflowThread::doIf()"}),". The method takes two arguments:"]}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["A ",(0,a.jsx)(n.code,{children:"WorkflowCondition"})," (see above)."]}),"\n",(0,a.jsxs)(n.li,{children:["An ",(0,a.jsx)(n.code,{children:"IfElseBody"})," implementation."]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"IfElseBody"})," is just a type: think of it as a functional interface that's the same as a ",(0,a.jsx)(n.code,{children:"ThreadFunc"})," but it's used differently. Generally, an ",(0,a.jsx)(n.code,{children:"IfElseBody"})," is provided by an anonymous function; however, in Python it is required to pass a proper function (not a ",(0,a.jsx)(n.code,{children:"lambda"}),")."]}),"\n",(0,a.jsxs)(n.p,{children:["Here's an example of executing a ",(0,a.jsx)(n.code,{children:"my-task"})," Task if ",(0,a.jsx)(n.code,{children:"foo < 3"}),":"]}),"\n",(0,a.jsxs)(t.A,{children:[(0,a.jsx)(l.A,{value:"java",label:"Java",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'WfRunVariable foo = wf.addVariable("foo", VariableType.INT);\n\nwf.doIf(\n    wf.condition(foo, Comparator.LESS_THAN, 3),\n    ifBody -> {\n        ifBody.execute("my-task");\n    }\n);\n'})})}),(0,a.jsx)(l.A,{value:"go",label:"Go",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",children:'foo := wf.AddVariable("foo", model.VariableType_INT)\n\nwf.DoIf(\n    wf.Condition(foo, model.Comparator_LESS_THAN, 3),\n    func (ifBody *wflib.WorkflowThread) {\n        ifBody.Execute("my-task")\n    },\n)\n'})})}),(0,a.jsxs)(l.A,{value:"python",label:"Python",children:[(0,a.jsxs)(n.p,{children:["In python you have to use a first-class function, pay attention to ",(0,a.jsx)(n.code,{children:"if_body"})," function.\nThis is also applicable for methods."]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'def if_body(wf: WorkflowThread) -> None:\n    wf.execute("my-task")\n\ndef entrypoint(wf: WorkflowThread) -> None:\n    foo = wf.add_variable("foo", VariableType.INT)\n    condition = wf.condition(foo, Comparator.LESS_THAN, 3)\n    wf.do_if(condition, if_body)\n'})})]})]}),"\n",(0,a.jsx)(n.h3,{id:"more-than-one-condition-for-the-if-statement",children:"More than one condition for the If Statement"}),"\n",(0,a.jsxs)(n.p,{children:["Here's an example of executing a ",(0,a.jsx)(n.code,{children:"my-task"})," Task if ",(0,a.jsx)(n.code,{children:"foo < 3 and foo > 1"}),":"]}),"\n",(0,a.jsxs)(t.A,{children:[(0,a.jsx)(l.A,{value:"java",label:"Java",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'WfRunVariable foo = wf.addVariable("foo", VariableType.INT);\nwf.doIf(wf.condition(foo, Comparator.GREATER_THAN, 1),\n        ifHandler -> {\n            wf.doIf(wf.condition(foo, Comparator.LESS_THAN, 3), ifBody -> {\n                ifBody.execute("my-task");\n            });\n});\n'})})}),(0,a.jsx)(l.A,{value:"go",label:"Go",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",children:'wf.DoIf(\n\t\twf.Condition(foo, model.Comparator_LESS_THAN, 3),\n\t\tfunc (ifBody *wflib.WorkflowThread) {\n\t\t\twf.DoIf(\n\t\t\t\t\twf.Condition(foo, model.Comparator.GREATER_THAN, 1),\n\t\t\t\t\tfunc (ifBody *wflib.WorkflowThread) {\n\t\t\t\t\t\tifBody.Execute("my-task")\n\t\t\t\t\t}\n\t\t\t)\n\t\t}\n\t)\n'})})}),(0,a.jsxs)(l.A,{value:"python",label:"Python",children:[(0,a.jsxs)(n.p,{children:["In python you have to use a first-class function, pay attention to ",(0,a.jsx)(n.code,{children:"if_body"})," function.\nThis is also applicable for methods."]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'from littlehorse.model import VariableType, Comparator\nfrom littlehorse.workflow import WorkflowThread\n\nfoo = wf.add_variable("foo", VariableType.INT)\n\ndef if_body(wf: WorkflowThread) -> None:\n    wf.execute("my-task")\n\ndef second_if(wf: WorkflowThread) -> None:\n    wf.do_if(wf.condition(foo, Comparator.GREATER_THAN, 1), if_body)\n\ndef entrypoint(wf: WorkflowThread) -> None:\n    condition = wf.condition(foo, Comparator.LESS_THAN, 3)\n    wf.do_if(condition, second_if)\n'})})]})]}),"\n",(0,a.jsx)(n.h2,{id:"if-else-statements",children:"If Else Statements"}),"\n",(0,a.jsxs)(n.p,{children:["To do an ",(0,a.jsx)(n.code,{children:"if"}),"/",(0,a.jsx)(n.code,{children:"else"})," statement, you can use ",(0,a.jsx)(n.code,{children:"WorkflowThread::doIfElse()"}),", which is identical to ",(0,a.jsx)(n.code,{children:"doIf()"})," but it takes an additional ",(0,a.jsx)(n.code,{children:"IfElseBody"})," that is executed if the condition is false."]}),"\n",(0,a.jsx)(n.p,{children:"An example:"}),"\n",(0,a.jsxs)(t.A,{children:[(0,a.jsx)(l.A,{value:"java",label:"Java",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'WfRunVariable foo = wf.addVariable("foo", VariableType.INT);\n\nwf.doIf(\n    wf.condition(foo, Comparator.LESS_THAN, 3),\n    ifBody -> {\n        ifBody.execute("my-task");\n    },\n    elseBody -> {\n        elseBody.execute("my-other-task");\n        elseBody.execute("yet-another-task");\n    }\n);\n'})})}),(0,a.jsx)(l.A,{value:"go",label:"Go",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",children:'foo := wf.AddVariable("foo", model.VariableType_INT)\n\nwf.DoIfElse(\n    wf.Condition(foo, model.Comparator_LESS_THAN, 3),\n    func (ifBody *wflib.WorkflowThread) {\n        ifBody.Execute("my-task")\n    },\n    func (elseBody *wflib.WorkflowThread) {\n        elseBody.Execute("another-task")\n        elseBody.Execute("yet-another-task")\n    },\n)\n'})})}),(0,a.jsxs)(l.A,{value:"python",label:"Python",children:[(0,a.jsxs)(n.p,{children:["In python you have to use a first-class function, pay attention to ",(0,a.jsx)(n.code,{children:"if_body"})," and ",(0,a.jsx)(n.code,{children:"else_body"})," functions.\nThis is also applicable for methods."]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'def entrypoint(wf: WorkflowThread) -> None:\n    def else_body(wf: WorkflowThread) -> None:\n        wf.execute("another-task")\n        wf.execute("yet-another-task")\n\n    def if_body(wf: WorkflowThread) -> None:\n        wf.execute("my-task")\n\n    foo = wf.add_variable("foo", VariableType.INT)\n    condition = wf.condition(foo, Comparator.LESS_THAN, 3)\n    wf.do_if(condition, if_body, else_body)\n'})})]})]}),"\n",(0,a.jsx)(n.h2,{id:"while-loops",children:"While Loops"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"WorkflowThread"})," in LittleHorse also has a ",(0,a.jsx)(n.code,{children:"doWhile()"})," function/method. To use it, you pass in a ",(0,a.jsx)(n.code,{children:"WorkflowCondition"})," and a ",(0,a.jsx)(n.code,{children:"WhileBody"}),", which is just a lambda function or interface defining workflow logic."]}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsxs)(n.p,{children:["The semantics of ",(0,a.jsx)(n.code,{children:"WorkflowThread#doWhile()"})," are the same as a ",(0,a.jsx)(n.code,{children:"while"})," loop in programming, not a ",(0,a.jsx)(n.code,{children:"do while"}),". That is because ",(0,a.jsx)(n.code,{children:"while"})," is a reserved word in most languages, so we couldn't add a function called ",(0,a.jsx)(n.code,{children:"while"}),"."]})}),"\n",(0,a.jsxs)(n.p,{children:["Here's an example that executes two tasks in a loop as long as ",(0,a.jsx)(n.code,{children:"foo < 3"}),":"]}),"\n",(0,a.jsxs)(t.A,{children:[(0,a.jsx)(l.A,{value:"java",label:"Java",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'WfRunVariable foo = wf.addVariable("foo", VariableType.INT);\n\nwf.doWhile(\n    wf.condition(foo, Comparator.LESS_THAN, 3),\n    loopBody -> {\n        loopBody.execute("my-task");\n        loopBody.execute("another-task");\n    }\n);\n'})})}),(0,a.jsx)(l.A,{value:"go",label:"Go",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",children:'foo := wf.AddVariable("foo", model.VariableType_INT)\n\nwf.DoWhile(\n    wf.Condition(foo, model.Comparator_LESS_THAN, 3),\n    func (loopBody *wflib.WorkflowThread) {\n        loopBody.Execute("my-task")\n        loopBody.Execute("another-task")\n    },\n)\n'})})}),(0,a.jsxs)(l.A,{value:"python",label:"Python",children:[(0,a.jsxs)(n.p,{children:["In python you have to use a first-class function, pay attention to ",(0,a.jsx)(n.code,{children:"while_body"})," function.\nThis is also applicable for methods."]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'def entrypoint(wf: WorkflowThread) -> None:\n    def while_body(wf: WorkflowThread) -> None:\n        wf.execute("my-task")\n        wf.execute("another-task")\n\n    foo = wf.add_variable("foo", VariableType.INT)\n    condition = wf.condition(foo, Comparator.LESS_THAN, 3)\n    wf.do_while(condition, while_body)\n'})})]})]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(f,{...e})}):f(e)}},9365:(e,n,o)=>{o.d(n,{A:()=>l});o(6540);var a=o(8215);const i={tabItem:"tabItem_Ymn6"};var t=o(4848);function l(e){let{children:n,hidden:o,className:l}=e;return(0,t.jsx)("div",{role:"tabpanel",className:(0,a.A)(i.tabItem,l),hidden:o,children:n})}},1470:(e,n,o)=>{o.d(n,{A:()=>T});var a=o(6540),i=o(8215),t=o(3104),l=o(6347),r=o(205),s=o(7485),d=o(1682),c=o(9466);function h(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function f(e){const{values:n,children:o}=e;return(0,a.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:o,attributes:a,default:i}}=e;return{value:n,label:o,attributes:a,default:i}}))}(o);return function(e){const n=(0,d.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,o])}function u(e){let{value:n,tabValues:o}=e;return o.some((e=>e.value===n))}function p(e){let{queryString:n=!1,groupId:o}=e;const i=(0,l.W6)(),t=function(e){let{queryString:n=!1,groupId:o}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!o)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return o??null}({queryString:n,groupId:o});return[(0,s.aZ)(t),(0,a.useCallback)((e=>{if(!t)return;const n=new URLSearchParams(i.location.search);n.set(t,e),i.replace({...i.location,search:n.toString()})}),[t,i])]}function x(e){const{defaultValue:n,queryString:o=!1,groupId:i}=e,t=f(e),[l,s]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:o}=e;if(0===o.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!u({value:n,tabValues:o}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${o.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=o.find((e=>e.default))??o[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:t}))),[d,h]=p({queryString:o,groupId:i}),[x,m]=function(e){let{groupId:n}=e;const o=function(e){return e?`docusaurus.tab.${e}`:null}(n),[i,t]=(0,c.Dv)(o);return[i,(0,a.useCallback)((e=>{o&&t.set(e)}),[o,t])]}({groupId:i}),j=(()=>{const e=d??x;return u({value:e,tabValues:t})?e:null})();(0,r.A)((()=>{j&&s(j)}),[j]);return{selectedValue:l,selectValue:(0,a.useCallback)((e=>{if(!u({value:e,tabValues:t}))throw new Error(`Can't select invalid tab value=${e}`);s(e),h(e),m(e)}),[h,m,t]),tabValues:t}}var m=o(2303);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var w=o(4848);function b(e){let{className:n,block:o,selectedValue:a,selectValue:l,tabValues:r}=e;const s=[],{blockElementScrollPositionUntilNextRender:d}=(0,t.a_)(),c=e=>{const n=e.currentTarget,o=s.indexOf(n),i=r[o].value;i!==a&&(d(n),l(i))},h=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const o=s.indexOf(e.currentTarget)+1;n=s[o]??s[0];break}case"ArrowLeft":{const o=s.indexOf(e.currentTarget)-1;n=s[o]??s[s.length-1];break}}n?.focus()};return(0,w.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":o},n),children:r.map((e=>{let{value:n,label:o,attributes:t}=e;return(0,w.jsx)("li",{role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:e=>s.push(e),onKeyDown:h,onClick:c,...t,className:(0,i.A)("tabs__item",j.tabItem,t?.className,{"tabs__item--active":a===n}),children:o??n},n)}))})}function y(e){let{lazy:n,children:o,selectedValue:i}=e;const t=(Array.isArray(o)?o:[o]).filter(Boolean);if(n){const e=t.find((e=>e.props.value===i));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return(0,w.jsx)("div",{className:"margin-top--md",children:t.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==i})))})}function v(e){const n=x(e);return(0,w.jsxs)("div",{className:(0,i.A)("tabs-container",j.tabList),children:[(0,w.jsx)(b,{...n,...e}),(0,w.jsx)(y,{...n,...e})]})}function T(e){const n=(0,m.A)();return(0,w.jsx)(v,{...e,children:h(e.children)},String(n))}},8453:(e,n,o)=>{o.d(n,{R:()=>l,x:()=>r});var a=o(6540);const i={},t=a.createContext(i);function l(e){const n=a.useContext(t);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),a.createElement(t.Provider,{value:n},e.children)}}}]);
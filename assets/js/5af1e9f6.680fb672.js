"use strict";(self.webpackChunklh_site=self.webpackChunklh_site||[]).push([[8648],{9451:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var s=i(4848),n=i(8453);const r={title:"Releasing 0.8",description:"Hardening Security",slug:"littlehorse-0.8-release",authors:[{name:"The LittleHorse Council",image_url:"https://avatars.githubusercontent.com/u/140006313?s=400&u=7bf4c91d92dfe590ac71bb6b4821e1a81aa5b712&v=4"}],tags:["littlehorse","release"],image:"https://avatars.githubusercontent.com/u/140006313?s=400&u=7bf4c91d92dfe590ac71bb6b4821e1a81aa5b712&v=4",hide_table_of_contents:!1},l=void 0,a={permalink:"/blog/littlehorse-0.8-release",source:"@site/blog/2024-03-26-0.8.1-release.md",title:"Releasing 0.8",description:"Hardening Security",date:"2024-03-26T00:00:00.000Z",tags:[{label:"littlehorse",permalink:"/blog/tags/littlehorse"},{label:"release",permalink:"/blog/tags/release"}],readingTime:3.955,hasTruncateMarker:!0,authors:[{name:"The LittleHorse Council",image_url:"https://avatars.githubusercontent.com/u/140006313?s=400&u=7bf4c91d92dfe590ac71bb6b4821e1a81aa5b712&v=4",imageURL:"https://avatars.githubusercontent.com/u/140006313?s=400&u=7bf4c91d92dfe590ac71bb6b4821e1a81aa5b712&v=4"}],frontMatter:{title:"Releasing 0.8",description:"Hardening Security",slug:"littlehorse-0.8-release",authors:[{name:"The LittleHorse Council",image_url:"https://avatars.githubusercontent.com/u/140006313?s=400&u=7bf4c91d92dfe590ac71bb6b4821e1a81aa5b712&v=4",imageURL:"https://avatars.githubusercontent.com/u/140006313?s=400&u=7bf4c91d92dfe590ac71bb6b4821e1a81aa5b712&v=4"}],tags:["littlehorse","release"],image:"https://avatars.githubusercontent.com/u/140006313?s=400&u=7bf4c91d92dfe590ac71bb6b4821e1a81aa5b712&v=4",hide_table_of_contents:!1},unlisted:!1,prevItem:{title:"Releasing 0.9",permalink:"/blog/littlehorse-0.9-release"},nextItem:{title:"Releasing 0.7",permalink:"/blog/littlehorse-0.7-release"}},o={authorsImageUrls:[void 0]},c=[{value:"New Features",id:"new-features",level:2},{value:"Dynamic Task Execution",id:"dynamic-task-execution",level:3},{value:"Per-Thread Failure Handlers",id:"per-thread-failure-handlers",level:3},{value:"Content in <code>EXCEPTION</code>s",id:"content-in-exceptions",level:3},{value:"Multi-Tenancy Improvements",id:"multi-tenancy-improvements",level:3},{value:"Kafka Security Protocol Support",id:"kafka-security-protocol-support",level:3},{value:"LittleHorse Canary",id:"littlehorse-canary",level:3},{value:"Exponential Backoff Retry Policy",id:"exponential-backoff-retry-policy",level:3},{value:"JavaScript Client",id:"javascript-client",level:3},{value:"Bugfixes",id:"bugfixes",level:3},{value:"Looking Forward",id:"looking-forward",level:2}];function h(e){const t={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",ul:"ul",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"0.8"})," release of LittleHorse is out! This pre-1.0 release contains many new features, security enhancements, and performance improvements."]}),"\n",(0,s.jsx)(t.h2,{id:"new-features",children:"New Features"}),"\n",(0,s.jsx)(t.p,{children:"New features in this release cover some edge-cases in workflow development which came up from some initial pilots and internal usage of the platform."}),"\n",(0,s.jsx)(t.h3,{id:"dynamic-task-execution",children:"Dynamic Task Execution"}),"\n",(0,s.jsxs)(t.p,{children:["Before this release, a ",(0,s.jsx)(t.code,{children:"TaskNode"})," had a hard-coded reference to a ",(0,s.jsx)(t.code,{children:"TaskDef"}),". This means that every single ",(0,s.jsx)(t.code,{children:"WfRun"})," that reaches the same ",(0,s.jsx)(t.code,{children:"Node"})," in a ",(0,s.jsx)(t.code,{children:"WfSpec"})," ends up executing the same ",(0,s.jsx)(t.code,{children:"TaskDef"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["However, in LittleHorse Enterprises LLC's upcoming Control Plane project (a system for dynamically provisioning LittleHorse clusters as a SaaS service), we anticipate a special use-case (which we will blog about this upcoming fall) wherein we need to ",(0,s.jsx)(t.em,{children:"choose"})," which ",(0,s.jsx)(t.code,{children:"TaskDef"})," is executed dynamically at runtime."]}),"\n",(0,s.jsxs)(t.p,{children:["Specifically, depending on an input variable to a ",(0,s.jsx)(t.code,{children:"WfRun"})," (in this case, the ",(0,s.jsx)(t.code,{children:"data-plane-id"})," variable), we need to execute a different ",(0,s.jsx)(t.code,{children:"TaskDef"})," so that the ",(0,s.jsx)(t.code,{children:"TaskRun"})," is executed by a speciific Task Worker in a specific location. We will blog about that use-case later."]}),"\n",(0,s.jsx)(t.h3,{id:"per-thread-failure-handlers",children:"Per-Thread Failure Handlers"}),"\n",(0,s.jsxs)(t.p,{children:["Since the ",(0,s.jsx)(t.code,{children:"0.1.0"})," release of LittleHorse it has been possible to put a ",(0,s.jsx)(t.code,{children:"FailureHandler"})," on any ",(0,s.jsx)(t.code,{children:"Node"}),", such that if the ",(0,s.jsx)(t.code,{children:"NodeRun"})," fails, then a Failure Handler thread is"]}),"\n",(0,s.jsxs)(t.h3,{id:"content-in-exceptions",children:["Content in ",(0,s.jsx)(t.code,{children:"EXCEPTION"}),"s"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"#714"}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"multi-tenancy-improvements",children:"Multi-Tenancy Improvements"}),"\n",(0,s.jsxs)(t.p,{children:["Multi-Tenancy has been quietly under development in the LittleHorse Server since the ",(0,s.jsx)(t.code,{children:"0.6.0"})," release introduced a breaking change to allow for it last October. The ",(0,s.jsx)(t.code,{children:"0.8"})," release continues to progress towards making Multi-Tenancy generally-available."]}),"\n",(0,s.jsx)(t.p,{children:"This release includes two new major features for Multi-Tenancy:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["Allowing Python and Go clients to set the ",(0,s.jsx)(t.code,{children:"tenant-id"})," header using ",(0,s.jsx)(t.code,{children:"LHC_TENANT_id"})," (",(0,s.jsx)(t.a,{href:"https://github.com/littlehorse-enterprises/littlehorse/pull/704",children:"#704"}),")"]}),"\n",(0,s.jsxs)(t.li,{children:["Allowing administrative ",(0,s.jsx)(t.code,{children:"Principal"}),"s with admin privileges over multiple ",(0,s.jsx)(t.code,{children:"Tenant"}),"s: (",(0,s.jsx)(t.a,{href:"https://github.com/littlehorse-enterprises/littlehorse/pull/679",children:"#679"}),")"]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["Multi-Tenancy and support for authentication + fine-grained ACL's via ",(0,s.jsx)(t.code,{children:"Principal"}),"s has been a labor of love implemented by ",(0,s.jsx)(t.a,{href:"https://github.com/eduwercamacaro",children:"Eduwer Camacaro"}),", who has grown into the role of Grumpy Maintainer of LittleHorse."]}),"\n",(0,s.jsx)(t.h3,{id:"kafka-security-protocol-support",children:"Kafka Security Protocol Support"}),"\n",(0,s.jsxs)(t.p,{children:["Prior to release ",(0,s.jsx)(t.code,{children:"0.8"}),", the LH Server could only access a Kafka cluster with either:"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Plaintext access with no security."}),"\n",(0,s.jsx)(t.li,{children:"TLS with no authentication."}),"\n",(0,s.jsx)(t.li,{children:"MTLS security."}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["PR ",(0,s.jsx)(t.a,{href:"https://github.com/littlehorse-enterprises/littlehorse/pull/716",children:"#716"})," introduced the following Server configurations:"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.code,{children:"LHS_KAFKA_SECURITY_PROTOCOL"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.code,{children:"LHS_KAFKA_SASL_MECHANISM"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.code,{children:"LHS_KAFKA_SASL_JAAS_CONFIG"})}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"This allows for access to any Kafka cluster except those requiring loading custom implementations of callbacks on the client side (for example, using the Strimzi OAuth Plug-in)."}),"\n",(0,s.jsx)(t.p,{children:"It is now possible to run LH with Kafka as:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"No security (PLAINTEXT)"}),"\n",(0,s.jsx)(t.li,{children:"TLS on the brokers, no authentication (SSL)"}),"\n",(0,s.jsx)(t.li,{children:"MTLS on the brokers (SSL with TRUSTSTORE set)"}),"\n",(0,s.jsx)(t.li,{children:"SASL with any JAAS config (SASL_SSL)"}),"\n",(0,s.jsx)(t.li,{children:"Confluent Cloud."}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"littlehorse-canary",children:"LittleHorse Canary"}),"\n",(0,s.jsxs)(t.p,{children:["The LittleHorse Canary was released in early access. Inspired by the ",(0,s.jsx)(t.a,{href:"https://strimzi.io/blog/2021/11/09/canary/",children:"Strimzi Canary"})," for Apache Kafka, the LittleHorse Canary is a system that runs workflows on LittleHorse and reports on the health of the cluster(s) that it is monitoring."]}),"\n",(0,s.jsx)(t.p,{children:"The LH Canary system comprises two components:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsx)(t.li,{children:"The Metronome, which runs workflows and sends metric beats to a Kafka topic."}),"\n",(0,s.jsx)(t.li,{children:"The Aggregator, which consumes the metrics beats Kafka topic and aggregates metrics to be exposed to Prometheus and a GRPC API."}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"The goal of the Canary is to monitor, profile, and benchmark LittleHorse Clusters from the same exact perspective as the clients who use them."}),"\n",(0,s.jsxs)(t.p,{children:["The Canary is the brain child of ",(0,s.jsx)(t.a,{href:"https://github.com/sauljabin",children:"Sa\xfal Pi\xf1a"}),", who is also the author of the popular ",(0,s.jsx)(t.a,{href:"https://github.com/sauljabin/kaskade",children:"Kaskade"})," TUI for Apache Kafka."]}),"\n",(0,s.jsx)(t.h3,{id:"exponential-backoff-retry-policy",children:"Exponential Backoff Retry Policy"}),"\n",(0,s.jsxs)(t.p,{children:["PR (",(0,s.jsx)(t.a,{href:"https://github.com/littlehorse-enterprises/littlehorse/pull/707",children:"#707"}),") introduced the ability to configure exponential backoff for ",(0,s.jsx)(t.code,{children:"TaskRun"})," retries. Previously, only immediate retries were supported."]}),"\n",(0,s.jsx)(t.h3,{id:"javascript-client",children:"JavaScript Client"}),"\n",(0,s.jsxs)(t.p,{children:["We published the first version of ",(0,s.jsx)(t.code,{children:"littlehorse-client"})," on NPM ",(0,s.jsx)(t.a,{href:"https://www.npmjs.com/package/littlehorse-client",children:"here"}),". This client contains the ",(0,s.jsx)(t.code,{children:"LHConfig"})," in javascript, which provides access to our LittleHorse GRPC API. Note that we do not yet support a JavaScript Task Worker nor a JavaScript ",(0,s.jsx)(t.code,{children:"WfSpec"})," SDK."]}),"\n",(0,s.jsx)(t.h3,{id:"bugfixes",children:"Bugfixes"}),"\n",(0,s.jsx)(t.p,{children:"In this release, we fixed several bugs:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["Task Worker improperly reported ",(0,s.jsx)(t.code,{children:"EXCEPTION"}),"s and ",(0,s.jsx)(t.code,{children:"ERROR"}),"s when throwing ",(0,s.jsx)(t.code,{children:"LHTaskException"})," (",(0,s.jsx)(t.a,{href:"https://github.com/littlehorse-enterprises/pull/738",children:"#738"}),")"]}),"\n",(0,s.jsxs)(t.li,{children:["Fixes task queue rehydration (",(0,s.jsx)(t.a,{href:"https://github.com/littlehorse-enterprises/pull/727",children:"#727"}),")"]}),"\n",(0,s.jsxs)(t.li,{children:["Fixes the Retention Policy for ",(0,s.jsx)(t.code,{children:"ExternalEventDef"}),"'s (",(0,s.jsx)(t.a,{href:"https://github.com/littlehorse-enterprises/littlehorse/pull/724",children:"#724"}),")"]}),"\n",(0,s.jsxs)(t.li,{children:["Fixes deadlock in Java task worker (",(0,s.jsx)(t.a,{href:"https://github.com/littlehorse-enterprises/littlehorse/pull/723",children:"#723"}),")"]}),"\n",(0,s.jsxs)(t.li,{children:["Fixes concurrency bug with the ",(0,s.jsx)(t.code,{children:"AsyncWaiter"})," in the server (",(0,s.jsx)(t.a,{href:"https://github.com/littlehorse-enterprises/littlehorse/pull/719",children:"#719"}),")"]}),"\n",(0,s.jsxs)(t.li,{children:["Fixes various issues from soak tests (",(0,s.jsx)(t.a,{href:"https://github.com/littlehorse-enterprises/littlehorse/pull/706",children:"#706"}),")"]}),"\n",(0,s.jsxs)(t.li,{children:["Fixes to ",(0,s.jsx)(t.code,{children:"NodeRun"})," lifecycle (",(0,s.jsx)(t.a,{href:"https://github.com/littlehorse-enterprises/littlehorse/pull/665",children:"#665"}),")."]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"looking-forward",children:"Looking Forward"}),"\n",(0,s.jsx)(t.p,{children:"We continue to stabilize our API and add features that cover edge cases. Load testing, chaos testing, and soak testing are an ongoing project, and we are working with the Apache Kafka Community on a few bugfixes in the Kafka Streams library which is heavily used in the core of LittleHorse."}),"\n",(0,s.jsxs)(t.p,{children:["Once those action items are resolved, we will make a ",(0,s.jsx)(t.code,{children:"1.0"})," release candidate. However, in the meantime we don't expect any massively-breaking API changes at the protocol level. However, certain syntactical changes may occur in our SDK's (especially Go and Python)."]})]})}function d(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>l,x:()=>a});var s=i(6540);const n={},r=s.createContext(n);function l(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);
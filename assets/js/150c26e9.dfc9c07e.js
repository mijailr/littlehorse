"use strict";(self.webpackChunklh_site=self.webpackChunklh_site||[]).push([[4792],{4591:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>u});var o=t(4848),r=t(8453),s=t(1470),a=t(9365);const i={},l="Managing Metadata",c={id:"developer-guide/grpc/managing-metadata",title:"Managing Metadata",description:"Before you can run a WfRun, you need to create your WfSpec's! This guide shows you how to do that.",source:"@site/docs/05-developer-guide/09-grpc/05-managing-metadata.md",sourceDirName:"05-developer-guide/09-grpc",slug:"/developer-guide/grpc/managing-metadata",permalink:"/docs/developer-guide/grpc/managing-metadata",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Background",permalink:"/docs/developer-guide/grpc/basics"},next:{title:"Running a Workflow",permalink:"/docs/developer-guide/grpc/running-workflows"}},d={},u=[{value:"<code>TaskDef</code>",id:"taskdef",level:2},{value:"<code>WfSpec</code>",id:"wfspec",level:2},{value:"<code>ExternalEventDef</code>",id:"externaleventdef",level:2},{value:"<code>UserTaskDef</code>",id:"usertaskdef",level:2}];function f(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"managing-metadata",children:"Managing Metadata"})}),"\n",(0,o.jsxs)(n.p,{children:["Before you can run a ",(0,o.jsx)(n.code,{children:"WfRun"}),", you need to create your ",(0,o.jsx)(n.code,{children:"WfSpec"}),"'s! This guide shows you how to do that."]}),"\n",(0,o.jsxs)(n.p,{children:["You can manage Metadata Objects (",(0,o.jsx)(n.code,{children:"WfSpec"}),", ",(0,o.jsx)(n.code,{children:"TaskDef"}),", ",(0,o.jsx)(n.code,{children:"ExternalEventDef"}),", and ",(0,o.jsx)(n.code,{children:"UserTaskDef"}),") either using ",(0,o.jsx)(n.code,{children:"lhctl"})," or with a grpc client. This section details how to manage them using the SDK's and grpc clients."]}),"\n",(0,o.jsxs)(n.p,{children:["Please note that, in LittleHorse, all metadata requests are idempotent. Additionally, if you make a metadata request to ",(0,o.jsx)(n.code,{children:"Put"})," an object with the exact same specifications of the object that already exists, the API will return the ",(0,o.jsx)(n.code,{children:"OK"})," grpc status. This is useful so that you can safely use CI/CD pipelines to manage metadata, or use a script that runs upon application startup to manage metadata, without having to catch ",(0,o.jsx)(n.code,{children:"ALREADY_EXISTS"})," errors."]}),"\n",(0,o.jsx)(n.h2,{id:"taskdef",children:(0,o.jsx)(n.code,{children:"TaskDef"})}),"\n",(0,o.jsxs)(n.p,{children:["In general, the easiest way to register a ",(0,o.jsx)(n.code,{children:"TaskDef"})," in LittleHorse is through a ",(0,o.jsx)(n.code,{children:"LHTaskWorker"})," object or struct."]}),"\n",(0,o.jsxs)(s.A,{children:[(0,o.jsxs)(a.A,{value:"java",label:"Java",default:!0,children:[(0,o.jsx)(n.p,{children:"Let's say I have a properly-annotated Task Worker class:"}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'class Greeter {\n    @LHTaskMethod("greet")\n    public String greeting(String name) {\n        return "Hello there, " + name;\n    }\n}\n'})}),(0,o.jsxs)(n.p,{children:["You can use the ",(0,o.jsx)(n.code,{children:"LHTaskWorker"})," to create the ",(0,o.jsx)(n.code,{children:"TaskDef"})," as follows:"]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'LHConfig config = ...;\nLHTaskWorker worker = new LHTaskWorker(new Greeter(), "greeting", config);\nworker.registerTaskDef();\n'})}),(0,o.jsxs)(n.p,{children:["You can get a ",(0,o.jsx)(n.code,{children:"TaskDef"})," or delete it using the grpc client:"]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'LittleHorseBlockingStub client = ...;\n\n// Get a TaskDef\nTaskDefId taskId = TaskDefId.newBuilder().setName("my-task").build();\nTaskDef myTask = client.getTaskDef(taskId);\n\n// Delete the task\nclient.deleteTaskDef(DeleteTaskDefRequest.newBuilder().setId(taskId).build());\n'})})]}),(0,o.jsxs)(a.A,{value:"go",label:"Go",children:[(0,o.jsxs)(n.p,{children:["You can use the ",(0,o.jsx)(n.code,{children:"LHTaskWorker"})," struct to automatically register a ",(0,o.jsx)(n.code,{children:"TaskDef"})," from your Task Function. First, create your ",(0,o.jsx)(n.code,{children:"LHTaskWorker"})," as follows (assuming that ",(0,o.jsx)(n.code,{children:"myTaskFunc"})," is a function pointer to your Task Function):"]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'config := littlehorse.NewConfigFromEnv()\nclient, err := config.GetGrpcClient()\n\ntw, _ := taskworker.NewTaskWorker(config, myTaskFunc, "my-task")\n\n_, err := tw.RegisterTaskDef()\n'})}),(0,o.jsxs)(n.p,{children:["The above automatically generates a ",(0,o.jsx)(n.code,{children:"TaskDef"})," from the function signature using GoLang reflection, and registers it with the API."]}),(0,o.jsxs)(n.p,{children:["You can get and delete ",(0,o.jsx)(n.code,{children:"TaskDef"}),"'s as follows:"]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'client, _ := config.GetGrpcClient()\ntaskDefId := &lhproto.TaskDefId{Name: "my-task"}\n\ntaskDef, err := (*client).GetTaskDef(context.Background(), taskDefId)\n\n// delete the TaskDef\n_, err = (*client).DeleteTaskDef(context.Background(), &lhproto.DeleteTaskDefRequest{\n    Id: taskDefId,\n})\n'})})]}),(0,o.jsxs)(a.A,{value:"python",label:"Python",children:[(0,o.jsxs)(n.p,{children:["In the Python SDK, a function must be ",(0,o.jsx)(n.code,{children:"async"})," in order to be used as a Task Function. No annotations are required."]}),(0,o.jsxs)(n.p,{children:["The easiest way to register a ",(0,o.jsx)(n.code,{children:"TaskDef"})," to your LittleHorse Cluster is using the ",(0,o.jsx)(n.code,{children:"littlehorse.create_task_def()"})," utility function. The following example defines a Task Function and creates a ",(0,o.jsx)(n.code,{children:"TaskDef"})," in the LittleHorse Cluster."]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'import asyncio\nfrom littlehorse import create_task_def\nfrom littlehorse.config import LHConfig\nfrom littlehorse.model.service_pb2 import *\nfrom google.protobuf.json_format import MessageToJson\n\n\n# This is the Task Function. It must be `async`.\nasync def greet(name: str) -> None:\n    print(f"Hello there, {name}!")\n\n\nasync def main():\n    config = LHConfig()\n\n    # Let\'s use the string "greet-task" as the TaskDef\'s name\n    create_task_def(greet, "greet-task", config)\n\n\nif __name__ == \'__main__\':\n    asyncio.run(main())\n'})}),(0,o.jsxs)(n.p,{children:["You can delete a ",(0,o.jsx)(n.code,{children:"TaskDef"})," in python using the ",(0,o.jsx)(n.code,{children:"LittleHorseStub"})," and the ",(0,o.jsx)(n.a,{href:"/docs/api#deletetaskdef",children:(0,o.jsx)(n.code,{children:"rpc DeleteTaskDef"})}),". An example is shown below:"]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"from littlehorse.config import LHConfig\nfrom littlehorse.model import *\n\n\nif __name__ == '__main__':\n    # Get the grpc client\n    config = LHConfig()\n    client = config.stub()\n\n    # Formulate the request\n    delete_td_request = DeleteTaskDefRequest(id=TaskDefId(name=\"greet-task\"))\n\n    # Delete the TaskDef\n    client.DeleteTaskDef(delete_td_request)\n"})})]})]}),"\n",(0,o.jsx)(n.h2,{id:"wfspec",children:(0,o.jsx)(n.code,{children:"WfSpec"})}),"\n",(0,o.jsxs)(n.p,{children:["In LittleHorse, the easiest way to deploy a ",(0,o.jsx)(n.code,{children:"WfSpec"})," is using the ",(0,o.jsx)(n.code,{children:"Workflow"})," class or struct provided by our Java, Go, and Python SDK's. The ",(0,o.jsx)(n.code,{children:"Workflow"})," class takes in a ",(0,o.jsx)(n.code,{children:"WorkflowThread"})," function reference that defines your ",(0,o.jsx)(n.code,{children:"WfSpec"})," logic (this is covered in the ",(0,o.jsx)(n.a,{href:"/docs/developer-guide/wfspec-development/",children:"Developing Workflows Documentation"}),"), and has a ",(0,o.jsx)(n.code,{children:"compile()"})," method which returns a ",(0,o.jsx)(n.code,{children:"PutWfSpecRequest"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["Like other metadata requests, the ",(0,o.jsx)(n.code,{children:"rpc PutWfSpec"})," is idempotent. However, as described in our ",(0,o.jsxs)(n.a,{href:"/docs/concepts/advanced/wfspec-versioning",children:[(0,o.jsx)(n.code,{children:"WfSpec"})," Versioning docs"]}),", ",(0,o.jsx)(n.code,{children:"WfSpec"})," objects have compound versioning that enforces certain compatibility rules between versions. In the ",(0,o.jsx)(n.code,{children:"PutWfSpecRequest"}),", you have the option to set the ",(0,o.jsx)(n.code,{children:"allowed_updates"})," field of the ",(0,o.jsx)(n.code,{children:"PutWfSpecRequest"}),". There are three values:"]}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"ALL_UPDATES"}),": both breaking changes and minor revisions are accepted."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"MINOR_REVISION_UPDATES"}),": breaking changes are rejected, but minor revisions are accepted."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"NO_UPDATES"}),": the request will fail if the specified new ",(0,o.jsx)(n.code,{children:"WfSpec"})," differs from the latest version."]}),"\n"]}),"\n",(0,o.jsxs)(s.A,{children:[(0,o.jsxs)(a.A,{value:"java",label:"Java",default:!0,children:[(0,o.jsxs)(n.p,{children:["You can execute the ",(0,o.jsx)(n.code,{children:"PutWfSpecRequest"})," with a specific ",(0,o.jsx)(n.code,{children:"AllowedUpdateType"})," as follows:"]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'package io.littlehorse.quickstart;\n\nimport java.io.IOException;\nimport io.littlehorse.sdk.common.LHLibUtil;\nimport io.littlehorse.sdk.common.config.LHConfig;\nimport io.littlehorse.sdk.common.proto.LittleHorseGrpc.LittleHorseBlockingStub;\nimport io.littlehorse.sdk.wfsdk.Workflow;\nimport io.littlehorse.sdk.wfsdk.WorkflowThread;\nimport io.littlehorse.sdk.common.proto.AllowedUpdateType;\nimport io.littlehorse.sdk.common.proto.PutWfSpecRequest;\nimport io.littlehorse.sdk.common.proto.WfSpec;\n\npublic class Main {\n\n    private static void wfFunc(WorkflowThread wf) {\n        // The `greet` TaskDef must already exist\n        wf.execute("greet", "some-name");\n    }\n\n    public static void main(String[] args) throws IOException {\n        LHConfig config = new LHConfig();\n        LittleHorseBlockingStub client = config.getBlockingStub();\n\n        Workflow workflow = Workflow.newWorkflow("my-wfspec", Main::wfFunc);\n\n        // Only allow updates that do not change the API of the WfSpec\n        workflow.withUpdateType(AllowedUpdateType.MINOR_REVISION_UPDATES);\n\n        PutWfSpecRequest request = workflow.compileWorkflow();\n        WfSpec result = client.putWfSpec(request);\n\n        System.out.println(LHLibUtil.protoToJson(result));\n    }\n}\n'})}),(0,o.jsxs)(n.p,{children:["You can get or delete a ",(0,o.jsx)(n.code,{children:"WfSpec"})," as follows:"]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'package io.littlehorse.quickstart;\n\nimport java.io.IOException;\nimport io.littlehorse.sdk.common.LHLibUtil;\nimport io.littlehorse.sdk.common.config.LHConfig;\nimport io.littlehorse.sdk.common.proto.LittleHorseGrpc.LittleHorseBlockingStub;\nimport io.littlehorse.sdk.common.proto.DeleteWfSpecRequest;\nimport io.littlehorse.sdk.common.proto.WfSpec;\nimport io.littlehorse.sdk.common.proto.WfSpecId;\n\npublic class Main {\n\n    public static void main(String[] args) throws IOException {\n        LHConfig config = new LHConfig();\n        LittleHorseBlockingStub client = config.getBlockingStub();\n\n        WfSpecId wfSpecId = WfSpecId.newBuilder()\n                .setName("my-wfspec")\n                .setMajorVersion(0) // Set to whichever major version you want\n                .setRevision(0) // Set to whichever revision you want\n                .build();\n\n        WfSpec wfSpec = client.getWfSpec(wfSpecId);\n        System.out.println(LHLibUtil.protoToJson(wfSpec));\n\n        // Delete the WfSpec\n        DeleteWfSpecRequest req = DeleteWfSpecRequest.newBuilder().setId(wfSpecId).build();\n        client.deleteWfSpec(req);\n    }\n}\n'})})]}),(0,o.jsxs)(a.A,{value:"go",label:"Go",children:[(0,o.jsxs)(n.p,{children:["Assuming that you have a function ",(0,o.jsx)(n.code,{children:"basic.MyWorkflow"})," which is a valid Workflow Function in Go, you can create a ",(0,o.jsx)(n.code,{children:"WfSpec"})," as follows:"]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'config := littlehorse.NewConfigFromEnv()\nclient, err := config.GetGrpcClient()\n\nwf := littlehorse.NewWorkflow(basic.MyWorkflow, "my-workflow").WithUpdateType(lhproto.AllowedUpdateType_MINOR_REVISION_UPDATES)\nputWf, _ := wf.Compile()\n\nresp, err := (*client).PutWfSpec(context.Background(), putWf)\n'})}),(0,o.jsxs)(n.p,{children:["You can get and delete ",(0,o.jsx)(n.code,{children:"WfSpec"}),"s as follows:"]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'wfSpecId := &lhproto.WfSpecId{\n    Name:         "my-wf",\n    MajorVersion: 2,\n    Revision:     1,\n}\n\nwfSpec, err := (*client).GetWfSpec(context.Background(), wfSpecId)\n\n// Get the latest wfSpec. Setting majorVersion is optional for this request\nmajorVersion := int32(2)\n\nsomeWf, err := (*client).GetLatestWfSpec(\n    context.Background(),\n    &lhproto.GetLatestWfSpecRequest{\n        Name:         "some-wf",\n        MajorVersion: &majorVersion,\n    },\n)\n\n// delete the WfSpec\n_, err = (*client).DeleteWfSpec(context.Background(), &lhproto.DeleteWfSpecRequest{\n    Id: wfSpecId,\n})\n'})})]}),(0,o.jsxs)(a.A,{value:"python",label:"Python",children:[(0,o.jsxs)(n.p,{children:["Assuming you have a workflow, you can use the ",(0,o.jsx)(n.code,{children:"littlehorse.create_workflow_spec()"})," utility function."]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'from littlehorse.config import LHConfig\nfrom littlehorse.model import *\nfrom littlehorse.workflow import Workflow, WorkflowThread\nfrom google.protobuf.json_format import MessageToJson\n\n# The workflow logic. This function must have type annotations in\n# order to conform to the `ThreadInitializer` interface.\ndef my_workflow_func(wf: WorkflowThread) -> None:\n    # the `greet` TaskDef must already exist\n    wf.execute("greet", "some-name")\n\n\nif __name__ == \'__main__\':\n    # Get the grpc client\n    config = LHConfig()\n    client = config.stub()\n\n    workflow: Workflow = Workflow("my-wfspec", my_workflow_func)\n    # Set the allowed update type\n    workflow.with_update_type(AllowedUpdateType.MINOR_REVISION_UPDATES)\n\n    # Create the WfSpec\n    request: PutWfSpecRequest = workflow.compile()\n    wf_spec: WfSpec = client.PutWfSpec(request)\n\n    print(MessageToJson(wf_spec))\n'})}),(0,o.jsxs)(n.p,{children:["You can get or delete a WfSpec using a ",(0,o.jsx)(n.code,{children:"stub"}),":"]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'from littlehorse.config import LHConfig\nfrom littlehorse.model import *\nfrom littlehorse.workflow import Workflow, WorkflowThread\nfrom google.protobuf.json_format import MessageToJson\n\n# The workflow logic. This function must have type annotations in\n# order to conform to the `ThreadInitializer` interface.\ndef my_workflow_func(wf: WorkflowThread) -> None:\n    # the `greet` TaskDef must already exist\n    wf.execute("greet", "some-name")\n\n\nif __name__ == \'__main__\':\n    # Get the grpc client\n    config = LHConfig()\n    client = config.stub()\n\n    wf_spec_id: WfSpecId = WfSpecId(\n        name="my-wfspec",\n        major_version=0, # replace with your preferred major version\n        revision=0, # replaced with your desired revision\n    )\n    wf_spec: WfSpec = client.GetWfSpec(wf_spec_id)\n\n    print(MessageToJson(wf_spec))\n\n    # Delete a WfSpec\n    client.DeleteWfSpec(DeleteWfSpecRequest(id=wf_spec_id))\n'})})]})]}),"\n",(0,o.jsx)(n.h2,{id:"externaleventdef",children:(0,o.jsx)(n.code,{children:"ExternalEventDef"})}),"\n",(0,o.jsxs)(n.p,{children:["As of now, the only field required to create an ",(0,o.jsx)(n.code,{children:"ExternalEventDef"})," is the ",(0,o.jsx)(n.code,{children:"name"})," of the ",(0,o.jsx)(n.code,{children:"ExternalEventDef"}),"."]}),"\n",(0,o.jsxs)(s.A,{children:[(0,o.jsxs)(a.A,{value:"java",label:"Java",default:!0,children:[(0,o.jsxs)(n.p,{children:["You can create, get, and delete an ",(0,o.jsx)(n.code,{children:"ExternalEventDef"})," as follows:"]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'package io.littlehorse.quickstart;\n\nimport java.io.IOException;\nimport io.littlehorse.sdk.common.LHLibUtil;\nimport io.littlehorse.sdk.common.config.LHConfig;\nimport io.littlehorse.sdk.common.proto.LittleHorseGrpc.LittleHorseBlockingStub;\nimport io.littlehorse.sdk.common.proto.DeleteExternalEventDefRequest;\nimport io.littlehorse.sdk.common.proto.ExternalEventDef;\nimport io.littlehorse.sdk.common.proto.ExternalEventDefId;\nimport io.littlehorse.sdk.common.proto.PutExternalEventDefRequest;\n\npublic class Main {\n\n    public static void main(String[] args) throws IOException, InterruptedException {\n        LHConfig config = new LHConfig();\n        LittleHorseBlockingStub client = config.getBlockingStub();\n\n        PutExternalEventDefRequest request = PutExternalEventDefRequest.newBuilder()\n                .setName("my-external-event-def")\n                .build();\n\n        client.putExternalEventDef(request);\n\n        // Metadata requests in LittleHorse take 50-100 ms to propagate to the global\n        // store.\n        Thread.sleep(100);\n\n        // Retrieve the ExternalEventDef\n        ExternalEventDefId id = ExternalEventDefId.newBuilder()\n                .setName("my-external-event-def")\n                .build();\n        ExternalEventDef eventDef = client.getExternalEventDef(id);\n        System.out.println(LHLibUtil.protoToJson(eventDef));\n\n        // Delete the ExternalEventDef\n        DeleteExternalEventDefRequest deleteRequest = DeleteExternalEventDefRequest.newBuilder()\n                .setId(id)\n                .build();\n        client.deleteExternalEventDef(deleteRequest);\n    }\n}\n'})})]}),(0,o.jsxs)(a.A,{value:"go",label:"Go",children:[(0,o.jsxs)(n.p,{children:["Assuming that you have a function ",(0,o.jsx)(n.code,{children:"basic.MyWorkflow"})," which is a valid Workflow Function in Go, you can create a ",(0,o.jsx)(n.code,{children:"WfSpec"})," as follows:"]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'config := littlehorse.NewConfigFromEnv()\nclient, err := config.GetGrpcClient()\n\nresp, err := (*client).PutExternalEventDef(context.Background(),\n    &lhproto.PutExternalEventDefRequest{\n        Name: "some-event",\n    },\n)\n'})}),(0,o.jsxs)(n.p,{children:["You can get and delete ",(0,o.jsx)(n.code,{children:"ExternalEventDef"}),"s as follows:"]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'externalEventDefId := &lhproto.ExternalEventDefId{\n    Name: "some-event",\n}\need, err := (*client).GetExternalEventDef(context.Background(), externalEventDefId)\n\n// delete the ExternalEventDef\n_, err = (*client).DeleteExternalEventDef(context.Background(), &lhproto.DeleteExternalEventDefRequest{\n    Id: externalEventDefId,\n})\n'})})]}),(0,o.jsxs)(a.A,{value:"python",label:"Python",children:[(0,o.jsxs)(n.p,{children:["In python, you can use the ",(0,o.jsx)(n.code,{children:"littlehorse.create_external_event_def"})," utility to more easily create an ",(0,o.jsx)(n.code,{children:"ExternalEventDef"})," as follows:"]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'from littlehorse import create_external_event_def\nfrom littlehorse.config import LHConfig\nfrom littlehorse.model import *\nfrom google.protobuf.json_format import MessageToJson\n\nfrom time import sleep\n\n\nif __name__ == \'__main__\':\n    # Get the grpc client\n    config = LHConfig()\n    client = config.stub()\n\n    create_external_event_def(name="my-external-event-def", config=config)\n\n    # In LittleHorse, metadata updates take 50-100ms to propagate to the global\n    # store.\n    sleep(0.2)\n\n    # Fetch the ExternalEventDef\n    external_event_def_id = ExternalEventDefId(name="my-external-event-def")\n    event_def: ExternalEventDef = client.GetExternalEventDef(external_event_def_id)\n    print(MessageToJson(event_def))\n\n    # Delete the ExternalEventDef\n    client.DeleteExternalEventDef(DeleteExternalEventDefRequest(id=external_event_def_id))\n'})})]})]}),"\n",(0,o.jsx)(n.h2,{id:"usertaskdef",children:(0,o.jsx)(n.code,{children:"UserTaskDef"})}),"\n",(0,o.jsxs)(n.p,{children:["A ",(0,o.jsx)(n.code,{children:"UserTaskDef"})," specifies the data that needs to be filled out in a form for a human to complete a ",(0,o.jsx)(n.code,{children:"UserTaskRun"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["Note that a ",(0,o.jsx)(n.code,{children:"UserTaskDef"})," is a versioned object (unlike a ",(0,o.jsx)(n.code,{children:"WfSpec"}),", however, there is only a ",(0,o.jsx)(n.code,{children:"version"})," number and no ",(0,o.jsx)(n.code,{children:"revision"}),"). As such, getting and deleting ",(0,o.jsx)(n.code,{children:"UserTaskDef"}),"s follows a similar pattern: we provide a ",(0,o.jsx)(n.code,{children:"GetLatestUserTaskDef"})," rpc call which allows you to get the latest ",(0,o.jsx)(n.code,{children:"UserTaskDef"})," with a given name."]}),"\n",(0,o.jsxs)(s.A,{children:[(0,o.jsxs)(a.A,{value:"java",label:"Java",default:!0,children:[(0,o.jsxs)(n.p,{children:["The easiest way to create a ",(0,o.jsx)(n.code,{children:"UserTaskDef"})," in Java is using the ",(0,o.jsx)(n.code,{children:"UserTaskSchema"})," class. Note that it infers the schema of the ",(0,o.jsx)(n.code,{children:"UserTaskDef"})," from our ",(0,o.jsx)(n.code,{children:"MyForm"})," class using the ",(0,o.jsx)(n.code,{children:"UserTaskField"})," annotation."]}),(0,o.jsxs)(n.p,{children:["The below example shows you how to create a ",(0,o.jsx)(n.code,{children:"UserTaskDef"}),", get it, and delete it."]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'package io.littlehorse.quickstart;\n\nimport java.io.IOException;\nimport io.littlehorse.sdk.common.LHLibUtil;\nimport io.littlehorse.sdk.common.config.LHConfig;\nimport io.littlehorse.sdk.common.proto.LittleHorseGrpc.LittleHorseBlockingStub;\nimport io.littlehorse.sdk.usertask.UserTaskSchema;\nimport io.littlehorse.sdk.usertask.annotations.UserTaskField;\nimport io.littlehorse.sdk.common.proto.DeleteUserTaskDefRequest;\nimport io.littlehorse.sdk.common.proto.PutUserTaskDefRequest;\nimport io.littlehorse.sdk.common.proto.UserTaskDef;\nimport io.littlehorse.sdk.common.proto.UserTaskDefId;\n\n// This Java class defines our form for the UserTaskDef\nclass SomeForm {\n    @UserTaskField(\n        displayName = "Approved?",\n        description = "Reply \'true\' if this is an acceptable request."\n    )\n    public boolean isApproved;\n\n    @UserTaskField(\n        displayName = "Explanation",\n        description = "Explain your answer",\n        required = false\n    )\n    public String explanation;\n}\n\n\npublic class Main {\n    public static void main(String[] args) throws IOException, InterruptedException {\n        LHConfig config = new LHConfig();\n        LittleHorseBlockingStub client = config.getBlockingStub();\n\n        String userTaskDefName = "my-user-task-def";\n\n        // Compile the above Java class into a UserTaskDef\n        UserTaskSchema userTask = new UserTaskSchema(new SomeForm(), userTaskDefName);\n        PutUserTaskDefRequest putRequest = userTask.compile();\n\n        // Register the UserTaskDef into LittleHorse\n        client.putUserTaskDef(putRequest);\n\n        // Get the UserTaskDef. Note that metadata creation takes 50-100ms to propagate\n        // through the LittleHorse cluster.\n        Thread.sleep(200);\n\n        UserTaskDefId id = UserTaskDefId.newBuilder()\n                .setName(userTaskDefName)\n                .setVersion(0)\n                .build();\n        UserTaskDef result = client.getUserTaskDef(id);\n        System.out.println(LHLibUtil.protoToJson(result));\n\n        // Delete the UserTaskDef\n        DeleteUserTaskDefRequest deleteRequest = DeleteUserTaskDefRequest.newBuilder()\n                .setId(id)\n                .build();\n\n        client.deleteUserTaskDef(deleteRequest);\n    }\n}\n'})})]}),(0,o.jsxs)(a.A,{value:"go",label:"Go",children:[(0,o.jsxs)(n.p,{children:["To create a ",(0,o.jsx)(n.code,{children:"UserTaskDef"})," in Go, you can create the ",(0,o.jsx)(n.code,{children:"PutUserTaskDefRequest"})," object."]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'config := littlehorse.NewConfigFromEnv()\nclient, err := config.GetGrpcClient()\n\ndescription := "this is a cool usertaskdef!"\nresult, err := (*client).PutUserTaskDef(context.Background(),\n     &lhproto.PutUserTaskDefRequest{\n        Name: "my-user-task",\n\t\tFields: []*lhproto.UserTaskField{\n\t\t\t&lhproto.UserTaskField{\n\t\t\t\tName: "my-first-int-field",\n\t\t\t\tType: lhproto.VariableType_INT,\n\t\t\t},\n\t\t\t&lhproto.UserTaskField{\n\t\t\t\tName: "my-second-str-field",\n\t\t\t\tType: lhproto.VariableType_STR,\n\t\t\t},\n\t\t},\n\t\tDescription: &description,\n    },\n)\n'})})]}),(0,o.jsxs)(a.A,{value:"python",label:"Python",children:[(0,o.jsxs)(n.p,{children:["In python, you can create a ",(0,o.jsx)(n.code,{children:"UserTaskDef"})," using ",(0,o.jsx)(n.a,{href:"/docs/api#putusertaskdef",children:(0,o.jsx)(n.code,{children:"rpc PutUserTaskDef"})}),"."]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'from littlehorse import create_external_event_def\nfrom littlehorse.config import LHConfig\nfrom littlehorse.model import *\nfrom google.protobuf.json_format import MessageToJson\n\nfrom time import sleep\n\n\nif __name__ == \'__main__\':\n    # Get the grpc client\n    config = LHConfig()\n    client = config.stub()\n\n    # Manually construct the PutUserTaskDefRequest, specifying the fields we want\n    # the UserTaskRun\'s to have.\n    put_user_task_def_req = PutUserTaskDefRequest(\n        name="my-user-task-def",\n        fields=[\n            UserTaskField(\n                name="isApproved",\n                description="Is the request Approved?",\n                display_name="Approved?",\n                required=True,\n            ),\n            UserTaskField(\n                name="explanation",\n                description="Explanation or comments for decision.",\n                required=False,\n                display_name="Comments",\n            )\n        ]\n    )\n\n    # Create the UserTaskDef\n    client.PutUserTaskDef(put_user_task_def_req)\n\n    # Wait for metadata to propagate\n    sleep(0.5)\n\n    # Get the UserTaskDef\n    user_task_def_id = UserTaskDefId(name="my-user-task-def", version=0)\n    user_task_def = client.GetUserTaskDef(user_task_def_id)\n    print(MessageToJson(user_task_def))\n\n    # Delete the UserTaskDef\n    client.DeleteUserTaskDef(DeleteUserTaskDefRequest(id=user_task_def_id))\n'})})]})]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(f,{...e})}):f(e)}},9365:(e,n,t)=>{t.d(n,{A:()=>a});t(6540);var o=t(8215);const r={tabItem:"tabItem_Ymn6"};var s=t(4848);function a(e){let{children:n,hidden:t,className:a}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,o.A)(r.tabItem,a),hidden:t,children:n})}},1470:(e,n,t)=>{t.d(n,{A:()=>T});var o=t(6540),r=t(8215),s=t(3104),a=t(6347),i=t(205),l=t(7485),c=t(1682),d=t(679);function u(e){return o.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function f(e){const{values:n,children:t}=e;return(0,o.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:o,default:r}}=e;return{value:n,label:t,attributes:o,default:r}}))}(t);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function h(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function p(e){let{queryString:n=!1,groupId:t}=e;const r=(0,a.W6)(),s=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l.aZ)(s),(0,o.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(r.location.search);n.set(s,e),r.replace({...r.location,search:n.toString()})}),[s,r])]}function m(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,s=f(e),[a,l]=(0,o.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const o=t.find((e=>e.default))??t[0];if(!o)throw new Error("Unexpected error: 0 tabValues");return o.value}({defaultValue:n,tabValues:s}))),[c,u]=p({queryString:t,groupId:r}),[m,g]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,s]=(0,d.Dv)(t);return[r,(0,o.useCallback)((e=>{t&&s.set(e)}),[t,s])]}({groupId:r}),k=(()=>{const e=c??m;return h({value:e,tabValues:s})?e:null})();(0,i.A)((()=>{k&&l(k)}),[k]);return{selectedValue:a,selectValue:(0,o.useCallback)((e=>{if(!h({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),g(e)}),[u,g,s]),tabValues:s}}var g=t(2303);const k={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=t(4848);function j(e){let{className:n,block:t,selectedValue:o,selectValue:a,tabValues:i}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.a_)(),d=e=>{const n=e.currentTarget,t=l.indexOf(n),r=i[t].value;r!==o&&(c(n),a(r))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},n),children:i.map((e=>{let{value:n,label:t,attributes:s}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:o===n?0:-1,"aria-selected":o===n,ref:e=>l.push(e),onKeyDown:u,onClick:d,...s,className:(0,r.A)("tabs__item",k.tabItem,s?.className,{"tabs__item--active":o===n}),children:t??n},n)}))})}function v(e){let{lazy:n,children:t,selectedValue:s}=e;const a=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=a.find((e=>e.props.value===s));return e?(0,o.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:a.map(((e,n)=>(0,o.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function w(e){const n=m(e);return(0,x.jsxs)("div",{className:(0,r.A)("tabs-container",k.tabList),children:[(0,x.jsx)(j,{...n,...e}),(0,x.jsx)(v,{...n,...e})]})}function T(e){const n=(0,g.A)();return(0,x.jsx)(w,{...e,children:u(e.children)},String(n))}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>i});var o=t(6540);const r={},s=o.createContext(r);function a(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);
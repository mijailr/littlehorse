"use strict";(self.webpackChunklh_site=self.webpackChunklh_site||[]).push([[3324],{5329:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>f,frontMatter:()=>o,metadata:()=>d,toc:()=>h});var r=a(4848),t=a(8453),l=a(1470),i=a(9365);const o={},s="Basics",d={id:"developer-guide/wfspec-development/basics",title:"Basics",description:"To develop a WfSpec in LittleHorse, you can use the Workflow struct or object in our SDK's. Generally, the Workflow entity constructor requires two arguments:",source:"@site/docs/05-developer-guide/08-wfspec-development/01-basics.md",sourceDirName:"05-developer-guide/08-wfspec-development",slug:"/developer-guide/wfspec-development/basics",permalink:"/docs/developer-guide/wfspec-development/basics",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"WfSpec Development",permalink:"/docs/developer-guide/wfspec-development/"},next:{title:"Conditionals and Loops",permalink:"/docs/developer-guide/wfspec-development/conditionals"}},c={},h=[{value:"Quickstart",id:"quickstart",level:2},{value:"Defining a <code>WfRunVariable</code>",id:"defining-a-wfrunvariable",level:2},{value:"Searchable and Required Variables",id:"searchable-and-required-variables",level:3},{value:"Defining Variables",id:"defining-variables",level:3},{value:"Executing a <code>TASK</code> Node",id:"executing-a-task-node",level:2},{value:"Task Input Variables",id:"task-input-variables",level:3},{value:"Setting Retention Hours",id:"setting-retention-hours",level:3}];function u(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"basics",children:"Basics"}),"\n","\n",(0,r.jsxs)(n.p,{children:["To develop a ",(0,r.jsx)(n.code,{children:"WfSpec"})," in LittleHorse, you can use the ",(0,r.jsx)(n.code,{children:"Workflow"})," struct or object in our SDK's. Generally, the ",(0,r.jsx)(n.code,{children:"Workflow"})," entity constructor requires two arguments:"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["The name of the ",(0,r.jsx)(n.code,{children:"WfSpec"})," to create."]}),"\n",(0,r.jsxs)(n.li,{children:["A ",(0,r.jsx)(n.code,{children:"ThreadFunc"}),", which is function pointer, lambda function, or interface of some sort which contains the logic for the Entrypoint ",(0,r.jsx)(n.code,{children:"ThreadSpec"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"Workflow"})," object translates your ",(0,r.jsx)(n.code,{children:"ThreadFunc"})," into a ",(0,r.jsx)(n.code,{children:"WfSpec"}),". As per the ",(0,r.jsx)(n.a,{href:"/docs/developer-guide/grpc/managing-metadata",children:"Metadata Management Documentation"}),", you can easily deploy a ",(0,r.jsx)(n.code,{children:"WfSpec"})," once you've gotten the ",(0,r.jsx)(n.code,{children:"Workflow"})," object."]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"ThreadFunc"})," takes in one argument: a ",(0,r.jsx)(n.code,{children:"WorkflowThread"}),". Everything you do goes through the ",(0,r.jsx)(n.code,{children:"ThreadFunc"}),". The ",(0,r.jsx)(n.code,{children:"ThreadFunc"})," defines a ",(0,r.jsx)(n.code,{children:"ThreadSpec"}),", and the ",(0,r.jsx)(n.code,{children:"ThreadFunc"})," passed into the ",(0,r.jsx)(n.code,{children:"Workflow"})," object or struct is used to build the Entrypoint Thread."]}),"\n",(0,r.jsx)(n.h2,{id:"quickstart",children:"Quickstart"}),"\n",(0,r.jsxs)(n.p,{children:["Below you can find executable files that define a ",(0,r.jsx)(n.code,{children:"WfSpec"})," with a single step: execute the ",(0,r.jsx)(n.code,{children:"greet"})," TaskDef with the supplied ",(0,r.jsx)(n.code,{children:"first-name"})," variable which comes as input. As a prerequisite, you need to have the ",(0,r.jsx)(n.code,{children:"greet"})," ",(0,r.jsx)(n.code,{children:"TaskDef"})," already registered in your LittleHorse Cluster."]}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsxs)(n.p,{children:["If you haven't yet created a ",(0,r.jsx)(n.code,{children:"TaskDef"})," named ",(0,r.jsx)(n.code,{children:"greet"}),", you can do it by following our ",(0,r.jsx)(n.a,{href:"/docs/developer-guide/task-worker-development#quickstart",children:"Task Worker Development Quickstart"}),"."]})}),"\n",(0,r.jsxs)(l.A,{children:[(0,r.jsx)(i.A,{value:"java",label:"Java",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'package io.littlehorse.quickstart;\n\nimport java.io.IOException;\nimport io.littlehorse.sdk.common.config.LHConfig;\nimport io.littlehorse.sdk.wfsdk.WfRunVariable;\nimport io.littlehorse.sdk.wfsdk.Workflow;\nimport io.littlehorse.sdk.wfsdk.WorkflowThread;\nimport io.littlehorse.sdk.common.proto.VariableType;\n\n\npublic class Main {\n    public static void main(String[] args) throws IOException, InterruptedException {\n        LHConfig config = new LHConfig();\n\n        // The `Workflow` object uses the DSL to compile the WfSpec\n        Workflow workflowGenerator = Workflow.newWorkflow("my-wf-spec", Main::wfLogic);\n\n        // Convenience method to register the `WfSpec` automatically.\n        workflowGenerator.registerWfSpec(config.getBlockingStub());\n    }\n\n    // NOTE: this can be static or non-static.\n    static void wfLogic(WorkflowThread wf) {\n        // Required input variable.\n        WfRunVariable firstName = wf.addVariable("first-name", VariableType.STR).required();\n\n        // Execute the `greet` Task and pass in `first-name` as an argument.\n        wf.execute("greet", firstName);\n    }\n}\n'})})}),(0,r.jsx)(i.A,{value:"go",label:"Go",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"context"\n\t"log"\n\n\t"github.com/littlehorse-enterprises/littlehorse/sdk-go/common"\n\t"github.com/littlehorse-enterprises/littlehorse/sdk-go/common/model"\n\t"github.com/littlehorse-enterprises/littlehorse/sdk-go/wflib"\n)\n\nfunc wfLogic(wf *wflib.WorkflowThread) {\n\tfirstName := wf.AddVariable("first-name", model.VariableType_STR).Required()\n\twf.Execute("greet", firstName)\n}\n\nfunc main() {\n\t// Get a client\n\tconfig := common.NewConfigFromEnv()\n\tclient, _ := config.GetGrpcClient()\n\n\tworkflowGenerator := wflib.NewWorkflow(wfLogic, "my-wfspec")\n\n\trequest, err := workflowGenerator.Compile()\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\n\t(*client).PutWfSpec(context.Background(), request)\n}\n'})})}),(0,r.jsx)(i.A,{value:"python",label:"Python",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from littlehorse.workflow import WorkflowThread, WfRunVariable, Workflow\nfrom littlehorse.config import LHConfig\nfrom littlehorse.model import VariableType, PutWfSpecRequest\n\n\ndef workflow_logic(wf: WorkflowThread) -> None:\n    first_name: WfRunVariable = wf.add_variable("first-name", VariableType.STR).required()\n    wf.execute("greet", first_name)\n\nif __name__ == \'__main__\':\n    config = LHConfig()\n    client = config.stub()\n\n    workflow_generator = Workflow("my-wfspec", workflow_logic)\n    request: PutWfSpecRequest = workflow_generator.compile()\n\n    client.PutWfSpec(request)\n'})})})]}),"\n",(0,r.jsxs)(n.p,{children:["At this point, whether you used python, go, or Java for the WfSpec, you should be able to run the ",(0,r.jsx)(n.code,{children:"WfSpec"})," via the following command:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"lhctl run my-wfspec first-name Obi-Wan\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"defining-a-wfrunvariable",children:["Defining a ",(0,r.jsx)(n.code,{children:"WfRunVariable"})]}),"\n",(0,r.jsxs)(n.p,{children:["A ",(0,r.jsx)(n.code,{children:"ThreadSpec"})," can have ",(0,r.jsx)(n.code,{children:"VariableDef"}),"s, which is similar to declaring a variable in programming. When declaring a ",(0,r.jsx)(n.code,{children:"Variable"})," in LittleHorse, you need to:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Provide the ",(0,r.jsx)(n.code,{children:"name"})," of the ",(0,r.jsx)(n.code,{children:"Variable"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Specify the ",(0,r.jsx)(n.code,{children:"VariableType"})," or provide a default value from which the type is inferred."]}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["A ",(0,r.jsx)(n.code,{children:"Variable"}),"'s name must be a valid hostname, meaning lowercase alphanumeric characters separated by a ",(0,r.jsx)(n.code,{children:"-"}),"."]})}),"\n",(0,r.jsx)(n.p,{children:"Recall the valid types of Variables:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"STR"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"INT"})," (64-bit integer, represented as a ",(0,r.jsx)(n.code,{children:"long"})," in Java and ",(0,r.jsx)(n.code,{children:"int64"})," in Go)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"DOUBLE"})," (64-bit floating point, ",(0,r.jsx)(n.code,{children:"double"})," in Java and ",(0,r.jsx)(n.code,{children:"float64"})," in Go)"]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"BOOL"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"JSON_OBJ"})," (a dumped JSON String)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"JSON_ARR"})," (a dumped JSON String)"]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"BYTES"})}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"searchable-and-required-variables",children:"Searchable and Required Variables"}),"\n",(0,r.jsxs)(n.p,{children:["It is often desirable to be able to search for a ",(0,r.jsx)(n.code,{children:"WfRun"})," based on the value of the ",(0,r.jsx)(n.code,{children:"Variable"}),"s inside it. For example, how can I find the ",(0,r.jsx)(n.code,{children:"WfRun"})," that has ",(0,r.jsx)(n.code,{children:"email=foo@bar.com"}),"? You can do that via the ",(0,r.jsx)(n.code,{children:"rpc SearchVariable"})]}),"\n",(0,r.jsxs)(n.p,{children:["In order to do that, however, you must first put an index on your ",(0,r.jsx)(n.code,{children:"Variable"})," by using the ",(0,r.jsx)(n.code,{children:".searchable()"})," method."]}),"\n",(0,r.jsxs)(n.p,{children:["Additionally, you can use the ",(0,r.jsx)(n.code,{children:".required()"})," method to make a ",(0,r.jsx)(n.code,{children:"Variable"})," required as input to the ",(0,r.jsx)(n.code,{children:"ThreadRun"}),". If you do this on your Entrypoint ",(0,r.jsx)(n.code,{children:"ThreadRun"}),", then the ",(0,r.jsx)(n.code,{children:"RunWfRequest"})," must specify a value for that ",(0,r.jsx)(n.code,{children:"Variable"}),"."]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["Putting an Index on a ",(0,r.jsx)(n.code,{children:"Variable"})," or making the ",(0,r.jsx)(n.code,{children:"Variable"}),' "Required" means that the ',(0,r.jsx)(n.code,{children:"Variable"})," becomes part of the public API of the ",(0,r.jsx)(n.code,{children:"WfSpec"}),'. That means you will increment a "major version" upon adding or removing an Index on a ',(0,r.jsx)(n.code,{children:"Variable"}),". For more info, check out our docs on ",(0,r.jsx)(n.a,{href:"/docs/concepts/workflows#wfspec-versioning",children:"WfSpec Versioning"}),"."]})}),"\n",(0,r.jsx)(n.h3,{id:"defining-variables",children:"Defining Variables"}),"\n",(0,r.jsxs)(l.A,{children:[(0,r.jsxs)(i.A,{value:"java",label:"Java",default:!0,children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'import io.littlehorse.sdk.wfsdk.WorkflowThread;\nimport io.littlehorse.sdk.wfsdk.WfRunVariable;\n\npublic void threadFunction(WorkflowThread thread) {\n    WfRunVariable myVar = thread.addVariable("my-variable", VariableTypePb.STR);\n}\n'})}),(0,r.jsxs)(n.p,{children:["The first argument is the name of the variable; the second is the type. Alternatively, you can pass in a default value to the ",(0,r.jsx)(n.code,{children:"Variable"}),". The following initializes ",(0,r.jsx)(n.code,{children:"myVar"})," to ",(0,r.jsx)(n.code,{children:'"Hello, there!"'}),"."]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'public void threadFunction(WorkflowThread thread) {\n    WfRunVariable myVar = thread.addVariable("my-variable", "Hello, there!");\n}\n'})}),(0,r.jsx)(n.p,{children:"You can set an index on the variable as follows:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'public void threadFunction(WorkflowThread thread) {\n    WfRunVariable myVar = thread.addVariable("my-variable", "Hello, there!").searchable();\n}\n'})}),(0,r.jsxs)(n.p,{children:["And you can mark the ",(0,r.jsx)(n.code,{children:"Variable"})," as Required as follows:"]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'public void threadFunction(WorkflowThread thread) {\n    WfRunVariable myVar = thread.addVariable("my-variable", "Hello, there!").required();\n}\n'})})]}),(0,r.jsxs)(i.A,{value:"go",label:"Go",children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'func myThreadFunc(thread *wflib.WorkflowThread) {\n    myVar := thread.AddVariable("my-variable", model.VariableTypePb_STR)\n}\n'})}),(0,r.jsxs)(n.p,{children:["You can add do the same and set a default value for the ",(0,r.jsx)(n.code,{children:"Variable"})," as follows:"]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'func myThreadFunc(thread *wflib.WorkflowThread) {\n    nameVar := thread.AddVariableWithDefault("my-variable", model.VariableType_STR, "Ahsoka Tano")\n}\n'})}),(0,r.jsxs)(n.p,{children:["You can add an index on a ",(0,r.jsx)(n.code,{children:"WfRunVariable"})," to make the variable searchable."]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'func myThreadFunc(thread *wflib.WorkflowThread) {\n    nameVar := thread.AddVariableWithDefault("my-variable", model.VariableType_STR, "Ahsoka Tano").Searchable()\n}\n'})})]}),(0,r.jsxs)(i.A,{value:"python",label:"Python",default:!0,children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'def thread_function(thread: WorkflowThread) -> None:\n    the_name = thread.add_variable("input-name", VariableType.STR)\n'})}),(0,r.jsxs)(n.p,{children:["The first argument is the name of the variable; the second is the type. Alternatively, you can pass in a default value to the ",(0,r.jsx)(n.code,{children:"Variable"}),"."]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'def thread_function(thread: WorkflowThread) -> None:\n    the_name = thread.add_variable("input-name", VariableType.STR, "The Mandalorian")\n'})}),(0,r.jsx)(n.p,{children:"You can set an index on the variable as follows:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'def thread_function(thread: WorkflowThread) -> None:\n    the_name = thread.add_variable("input-name", VariableType.STR).searchable()\n\n    # optionally make the variable a Required variable\n    the_name.required()\n'})})]})]}),"\n",(0,r.jsxs)(n.h2,{id:"executing-a-task-node",children:["Executing a ",(0,r.jsx)(n.code,{children:"TASK"})," Node"]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"WorkflowThread::execute()"})," method can be used to execute a Task. It is required that the ",(0,r.jsx)(n.code,{children:"TaskDef"})," is already registered with the LH Server, and that you have a Task Worker that is polling for those tasks."]}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:["It is perfectly acceptable for a ",(0,r.jsx)(n.code,{children:"WfSpec"})," written in one language to execute tasks that are defined and run in other languages."]})}),"\n",(0,r.jsxs)(n.p,{children:["To execute the ",(0,r.jsx)(n.code,{children:"foo"})," task, you simply do the following:"]}),"\n",(0,r.jsxs)(l.A,{children:[(0,r.jsx)(i.A,{value:"java",label:"Java",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'public void myWf(WorkflowThread thread) {\n    NodeOutput output = thread.execute("foo");\n}\n'})})}),(0,r.jsx)(i.A,{value:"go",label:"Go",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'func myThreadFunc(thread *wflib.WorkflowThread) {\n    taskOutput := thread.Execute("foo")\n}\n'})})}),(0,r.jsx)(i.A,{value:"python",label:"Python",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'def thread_function(thread: WorkflowThread) -> None:\n    thread.execute("foo")\n'})})})]}),"\n",(0,r.jsx)(n.h3,{id:"task-input-variables",children:"Task Input Variables"}),"\n",(0,r.jsx)(n.p,{children:"You can pass input variables to a Task. Let's say, for example, I have a Python Task Function as follows:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'async def my_task(some_str: str, some_int: int) -> str:\n    return f"Inputs were {some_str} and {some_int}"\n'})}),"\n",(0,r.jsxs)(n.p,{children:["The resulting ",(0,r.jsx)(n.code,{children:"TaskDef"})," has two input variables, one of type ",(0,r.jsx)(n.code,{children:"STR"})," and another of type ",(0,r.jsx)(n.code,{children:"INT"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["You can hard-code the input variables in a call to that ",(0,r.jsx)(n.code,{children:"TaskDef"})," as follows:"]}),"\n",(0,r.jsxs)(l.A,{children:[(0,r.jsx)(i.A,{value:"java",label:"Java",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'String inputStrVal = "input string value!";\nint inputIntVal = 54321;\nthread.execute("foo", inputStrVal, inputIntVal);\n'})})}),(0,r.jsx)(i.A,{value:"go",label:"Go",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'inputStrVal := "input string value!"\ninputIntVal := 54321\nthread.Execute("foo", inputStrVal, inputIntVal)\n'})})}),(0,r.jsx)(i.A,{value:"python",label:"Python",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'str_val = "input string value!"\nint_val = 54321\nthread.execute("foo", str_val, int_val)\n'})})})]}),"\n",(0,r.jsxs)(n.p,{children:["Alternatively, if you have a ",(0,r.jsx)(n.code,{children:"WfRunVariable"}),", you can use it as input:"]}),"\n",(0,r.jsxs)(l.A,{children:[(0,r.jsx)(i.A,{value:"java",label:"Java",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'public void threadFunction(WorkflowThread thread) {\n    WfRunVariable myStr = thread.addVariable("my-str", VariableType.STR);\n    WfRunVariable myInt = thread.addVariable("my-int", VariableType.INT);\n\n    thread.execute("foo", myStr, myInt);\n}\n'})})}),(0,r.jsx)(i.A,{value:"go",label:"Go",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'func threadFunction(thread *wflib.WorkflowThread) {\n    myStr := thread.AddVariable("my-str", model.VariableType_STR)\n    myInt := thread.AddVariable("my-int", model.VariableType_INT)\n\n    thread.Execute("foo", myStr, myInt)\n}\n'})})}),(0,r.jsx)(i.A,{value:"python",label:"Python",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'def thread_function(thread: WorkflowThread) -> None:\n    my_str = thread.add_variable("my-str", VariableType.STR)\n    my_int = thread.add_variable("my-int", VariableType.INT)\n    thread.execute("foo", my_str, my_int)\n'})})})]}),"\n",(0,r.jsx)(n.h3,{id:"setting-retention-hours",children:"Setting Retention Hours"}),"\n",(0,r.jsxs)(n.p,{children:["You can use the ",(0,r.jsx)(n.code,{children:"Workflow::withRetentionHours()"})," method to set how long a ",(0,r.jsx)(n.code,{children:"WfRun"})," should stay on the system. Remember that our default system hosts ",(0,r.jsx)(n.code,{children:"WfRun"}),"s for 168 hours (7 days). For example, if the ",(0,r.jsx)(n.code,{children:"WfSpec"})," has a retention period of 2 hours, a ",(0,r.jsx)(n.code,{children:"WfRun"})," will be deleted 2 hours after it is ",(0,r.jsx)(n.code,{children:"COMPLETED"})," or ",(0,r.jsx)(n.code,{children:"ERROR"}),":"]}),"\n",(0,r.jsxs)(l.A,{children:[(0,r.jsx)(i.A,{value:"java",label:"Java",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"Workflow wf = new WorkflowImpl(...)\nwf.withRetentionHours(23);\nwf.register(...);\n"})})}),(0,r.jsx)(i.A,{value:"go",label:"Go",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'client := ...;\nwf := wflib.NewWorkflow(basic.MyWorkflow, "my-workflow")\nputWf, _ := wf.Compile()\n\nhours := int32(23) \nputWf.WithRetentionHours(&hours)\nresp, err := client.PutWfSpec(putWf)\n'})})}),(0,r.jsx)(i.A,{value:"python",label:"Python",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'wf = Workflow("my-wf", thread_function)\nwf.retention_hours = 23\nlittlehorse.create_workflow_spec(wf, config)\n'})})})]})]})}function f(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},9365:(e,n,a)=>{a.d(n,{A:()=>i});a(6540);var r=a(8215);const t={tabItem:"tabItem_Ymn6"};var l=a(4848);function i(e){let{children:n,hidden:a,className:i}=e;return(0,l.jsx)("div",{role:"tabpanel",className:(0,r.A)(t.tabItem,i),hidden:a,children:n})}},1470:(e,n,a)=>{a.d(n,{A:()=>y});var r=a(6540),t=a(8215),l=a(3104),i=a(6347),o=a(205),s=a(7485),d=a(1682),c=a(9466);function h(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:a}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:a,attributes:r,default:t}}=e;return{value:n,label:a,attributes:r,default:t}}))}(a);return function(e){const n=(0,d.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,a])}function f(e){let{value:n,tabValues:a}=e;return a.some((e=>e.value===n))}function p(e){let{queryString:n=!1,groupId:a}=e;const t=(0,i.W6)(),l=function(e){let{queryString:n=!1,groupId:a}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:n,groupId:a});return[(0,s.aZ)(l),(0,r.useCallback)((e=>{if(!l)return;const n=new URLSearchParams(t.location.search);n.set(l,e),t.replace({...t.location,search:n.toString()})}),[l,t])]}function x(e){const{defaultValue:n,queryString:a=!1,groupId:t}=e,l=u(e),[i,s]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!f({value:n,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=a.find((e=>e.default))??a[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:l}))),[d,h]=p({queryString:a,groupId:t}),[x,m]=function(e){let{groupId:n}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(n),[t,l]=(0,c.Dv)(a);return[t,(0,r.useCallback)((e=>{a&&l.set(e)}),[a,l])]}({groupId:t}),j=(()=>{const e=d??x;return f({value:e,tabValues:l})?e:null})();(0,o.A)((()=>{j&&s(j)}),[j]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!f({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);s(e),h(e),m(e)}),[h,m,l]),tabValues:l}}var m=a(2303);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=a(4848);function g(e){let{className:n,block:a,selectedValue:r,selectValue:i,tabValues:o}=e;const s=[],{blockElementScrollPositionUntilNextRender:d}=(0,l.a_)(),c=e=>{const n=e.currentTarget,a=s.indexOf(n),t=o[a].value;t!==r&&(d(n),i(t))},h=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const a=s.indexOf(e.currentTarget)+1;n=s[a]??s[0];break}case"ArrowLeft":{const a=s.indexOf(e.currentTarget)-1;n=s[a]??s[s.length-1];break}}n?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.A)("tabs",{"tabs--block":a},n),children:o.map((e=>{let{value:n,label:a,attributes:l}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>s.push(e),onKeyDown:h,onClick:c,...l,className:(0,t.A)("tabs__item",j.tabItem,l?.className,{"tabs__item--active":r===n}),children:a??n},n)}))})}function v(e){let{lazy:n,children:a,selectedValue:t}=e;const l=(Array.isArray(a)?a:[a]).filter(Boolean);if(n){const e=l.find((e=>e.props.value===t));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:l.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==t})))})}function w(e){const n=x(e);return(0,b.jsxs)("div",{className:(0,t.A)("tabs-container",j.tabList),children:[(0,b.jsx)(g,{...n,...e}),(0,b.jsx)(v,{...n,...e})]})}function y(e){const n=(0,m.A)();return(0,b.jsx)(w,{...e,children:h(e.children)},String(n))}},8453:(e,n,a)=>{a.d(n,{R:()=>i,x:()=>o});var r=a(6540);const t={},l=r.createContext(t);function i(e){const n=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);
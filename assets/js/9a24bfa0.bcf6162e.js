"use strict";(self.webpackChunklh_site=self.webpackChunklh_site||[]).push([[3372],{7120:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>h});var r=n(4848),t=n(8453),l=n(1470),d=n(9365);const s={},o="Child Threads",i={id:"developer-guide/wfspec-development/child-threads",title:"Child Threads",description:"You can use WorkflowThread#spawnThread() and WorkflowThread#waitForThreads() to launch and wait for Child ThreadRuns, respectively. This is useful if you want to execute multiple pieces of business logic in parallel.",source:"@site/docs/05-developer-guide/08-wfspec-development/07-child-threads.md",sourceDirName:"05-developer-guide/08-wfspec-development",slug:"/developer-guide/wfspec-development/child-threads",permalink:"/docs/developer-guide/wfspec-development/child-threads",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Exception Handling",permalink:"/docs/developer-guide/wfspec-development/exception-handling"},next:{title:"User Tasks",permalink:"/docs/developer-guide/wfspec-development/user-tasks"}},c={},h=[{value:"Spawning Child Threads",id:"spawning-child-threads",level:2},{value:"Waiting for Child Threads",id:"waiting-for-child-threads",level:2}];function u(e){const a={admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.h1,{id:"child-threads",children:"Child Threads"}),"\n",(0,r.jsxs)(a.p,{children:["You can use ",(0,r.jsx)(a.code,{children:"WorkflowThread#spawnThread()"})," and ",(0,r.jsx)(a.code,{children:"WorkflowThread#waitForThreads()"})," to launch and wait for Child ",(0,r.jsx)(a.code,{children:"ThreadRun"}),"s, respectively. This is useful if you want to execute multiple pieces of business logic in parallel."]}),"\n",(0,r.jsx)(a.h2,{id:"spawning-child-threads",children:"Spawning Child Threads"}),"\n",(0,r.jsxs)(a.p,{children:["The ",(0,r.jsx)(a.code,{children:"WorkflowThread::spawnThread()"})," method takes in three arguments:"]}),"\n",(0,r.jsxs)(a.ol,{children:["\n",(0,r.jsxs)(a.li,{children:["A ",(0,r.jsx)(a.code,{children:"ThreadFunc"})," (normally a lambda or function pointer) defining the logic for the Child ",(0,r.jsx)(a.code,{children:"ThreadSpec"}),"/",(0,r.jsx)(a.code,{children:"ThreadRun"}),"."]}),"\n",(0,r.jsxs)(a.li,{children:["The name to assign to the Child ",(0,r.jsx)(a.code,{children:"ThreadSpec"}),"."]}),"\n",(0,r.jsxs)(a.li,{children:["A ",(0,r.jsx)(a.code,{children:"Map<String, ?>"})," for any input variables to the child thread (or equivalent, depending on the language of the SDK you use)."]}),"\n"]}),"\n",(0,r.jsxs)(a.p,{children:["Let's spawn a child thread whose ",(0,r.jsx)(a.code,{children:"ThreadSpec"})," we call ",(0,r.jsx)(a.code,{children:"my-child-thread"}),", and set the variable ",(0,r.jsx)(a.code,{children:"child-var"})," to ",(0,r.jsx)(a.code,{children:"foo"}),"."]}),"\n","\n",(0,r.jsxs)(l.A,{children:[(0,r.jsx)(d.A,{value:"java",label:"Java",default:!0,children:(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-java",children:'SpawnedThread spawnedThread = thread.spawnThread(\n    child -> {\n        WfRunVariable childVar = child.addVariable("child-var", VariableType.STR);\n        child.execute("some-task", childVar);\n    },\n    "my-child-thread",\n    Map.of("child-var", "foo")\n);\n'})})}),(0,r.jsx)(d.A,{value:"go",label:"Go",children:(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-go",children:'spawnedThread := thread.SpawnThread(\n\tfunc (child *wflib.WorkflowThread) {\n\t\tchildVar := child.AddVariable("child-var", model.VariableType_STR);\n\t\tchild.Execute("some-task", childVar);\n\t},\n\t"my-child-thread",\n\tmap[string]interface{}{"child-var": "foo"},\n)\n'})})}),(0,r.jsx)(d.A,{value:"python",label:"Python",default:!0,children:(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-python",children:'def my_thread_child(child: WorkflowThread) -> None:\n    child_var = child.add_variable("child-var", VariableType.STR)\n    child.execute("some-task", child_var)\n\nwf.spawn_thread(my_thread_child, "my-child-thread", {"child-var": "foo"})\n'})})})]}),"\n",(0,r.jsx)(a.h2,{id:"waiting-for-child-threads",children:"Waiting for Child Threads"}),"\n",(0,r.jsxs)(a.p,{children:["The ",(0,r.jsx)(a.code,{children:"WorkflowThread::waitForThreads()"})," method takes in a variable number of args. Each arg is the ",(0,r.jsx)(a.code,{children:"SpawnedThread"})," object returned when you launch your Child ",(0,r.jsx)(a.code,{children:"ThreadRun"})," (see above)."]}),"\n",(0,r.jsxs)(a.admonition,{type:"note",children:[(0,r.jsxs)(a.p,{children:["The return type is ",(0,r.jsx)(a.code,{children:"NodeOutput"}),"; however, it should be noted that the ",(0,r.jsx)(a.code,{children:"NodeOutput"})," should only be used to set a timeout or handle an exception; there is no content/payload/value associated with ",(0,r.jsx)(a.code,{children:"NodeOutput"})," for ",(0,r.jsx)(a.code,{children:"WAIT_FOR_THREAD"})," Nodes."]}),(0,r.jsxs)(a.p,{children:["Future releases of LittleHorse will allow a child ",(0,r.jsx)(a.code,{children:"ThreadRun"})," to return an output."]})]}),"\n",(0,r.jsxs)(l.A,{children:[(0,r.jsx)(d.A,{value:"java",label:"Java",default:!0,children:(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-java",children:'SpawnedThread spawnedThread = thread.spawnThread(...);\nSpawnedThread anotherThread = thread.spawnThread(...);\n// Omitted: Execute some business logic in parallel\n\nNodeOutput waitedThreads = thread.waitForThreads(spawnedThread, anotherThread);\n\n// You can handle exceptions here\nthread.handleException(\n    waitedThread,\n    null, // catch any failure\n    handler -> {\n        handler.execute("some-error-reporting-task");\n    }\n);\n'})})}),(0,r.jsx)(d.A,{value:"go",label:"Go",children:(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-go",children:'spawnedThread := ... // see above to spawn thread\nanotherThread := ... // see above to spawn thread\n\n// Omitted: Execute some business logic in parallel\n\nwaitedThreads := thread.WaitForThreads(spawnedThread, anotherThread)\n\nthread.HandleException(\n    waitedThreads,\n    nil, // handle any failure\n    func (handler *wflib.WorkflowThread) {\n        handler.execute("some-error-reporting-task")\n    },\n)\n'})})}),(0,r.jsx)(d.A,{value:"python",label:"Python",children:(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-python",children:'def my_handler(handle: WorkflowThread) -> None:\n    handle.execute("some-error-reporting-task")\n\noutput = wf.wait_for_threads(SpawnedThreads.from_list(...))\nwf.handle_exception(output, my_handler) # handle any failure\n'})})})]})]})}function p(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},9365:(e,a,n)=>{n.d(a,{A:()=>d});n(6540);var r=n(8215);const t={tabItem:"tabItem_Ymn6"};var l=n(4848);function d(e){let{children:a,hidden:n,className:d}=e;return(0,l.jsx)("div",{role:"tabpanel",className:(0,r.A)(t.tabItem,d),hidden:n,children:a})}},1470:(e,a,n)=>{n.d(a,{A:()=>j});var r=n(6540),t=n(8215),l=n(3104),d=n(6347),s=n(205),o=n(7485),i=n(1682),c=n(9466);function h(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:a}=e;return!!a&&"object"==typeof a&&"value"in a}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:a,children:n}=e;return(0,r.useMemo)((()=>{const e=a??function(e){return h(e).map((e=>{let{props:{value:a,label:n,attributes:r,default:t}}=e;return{value:a,label:n,attributes:r,default:t}}))}(n);return function(e){const a=(0,i.X)(e,((e,a)=>e.value===a.value));if(a.length>0)throw new Error(`Docusaurus error: Duplicate values "${a.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[a,n])}function p(e){let{value:a,tabValues:n}=e;return n.some((e=>e.value===a))}function f(e){let{queryString:a=!1,groupId:n}=e;const t=(0,d.W6)(),l=function(e){let{queryString:a=!1,groupId:n}=e;if("string"==typeof a)return a;if(!1===a)return null;if(!0===a&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:a,groupId:n});return[(0,o.aZ)(l),(0,r.useCallback)((e=>{if(!l)return;const a=new URLSearchParams(t.location.search);a.set(l,e),t.replace({...t.location,search:a.toString()})}),[l,t])]}function m(e){const{defaultValue:a,queryString:n=!1,groupId:t}=e,l=u(e),[d,o]=(0,r.useState)((()=>function(e){let{defaultValue:a,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(a){if(!p({value:a,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${a}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return a}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:a,tabValues:l}))),[i,h]=f({queryString:n,groupId:t}),[m,v]=function(e){let{groupId:a}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(a),[t,l]=(0,c.Dv)(n);return[t,(0,r.useCallback)((e=>{n&&l.set(e)}),[n,l])]}({groupId:t}),b=(()=>{const e=i??m;return p({value:e,tabValues:l})?e:null})();(0,s.A)((()=>{b&&o(b)}),[b]);return{selectedValue:d,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);o(e),h(e),v(e)}),[h,v,l]),tabValues:l}}var v=n(2303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=n(4848);function w(e){let{className:a,block:n,selectedValue:r,selectValue:d,tabValues:s}=e;const o=[],{blockElementScrollPositionUntilNextRender:i}=(0,l.a_)(),c=e=>{const a=e.currentTarget,n=o.indexOf(a),t=s[n].value;t!==r&&(i(a),d(t))},h=e=>{let a=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=o.indexOf(e.currentTarget)+1;a=o[n]??o[0];break}case"ArrowLeft":{const n=o.indexOf(e.currentTarget)-1;a=o[n]??o[o.length-1];break}}a?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.A)("tabs",{"tabs--block":n},a),children:s.map((e=>{let{value:a,label:n,attributes:l}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:r===a?0:-1,"aria-selected":r===a,ref:e=>o.push(e),onKeyDown:h,onClick:c,...l,className:(0,t.A)("tabs__item",b.tabItem,l?.className,{"tabs__item--active":r===a}),children:n??a},a)}))})}function T(e){let{lazy:a,children:n,selectedValue:t}=e;const l=(Array.isArray(n)?n:[n]).filter(Boolean);if(a){const e=l.find((e=>e.props.value===t));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:l.map(((e,a)=>(0,r.cloneElement)(e,{key:a,hidden:e.props.value!==t})))})}function g(e){const a=m(e);return(0,x.jsxs)("div",{className:(0,t.A)("tabs-container",b.tabList),children:[(0,x.jsx)(w,{...a,...e}),(0,x.jsx)(T,{...a,...e})]})}function j(e){const a=(0,v.A)();return(0,x.jsx)(g,{...e,children:h(e.children)},String(a))}},8453:(e,a,n)=>{n.d(a,{R:()=>d,x:()=>s});var r=n(6540);const t={},l=r.createContext(t);function d(e){const a=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function s(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),r.createElement(l.Provider,{value:a},e.children)}}}]);
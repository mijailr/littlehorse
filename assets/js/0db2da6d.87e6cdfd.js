"use strict";(self.webpackChunklh_site=self.webpackChunklh_site||[]).push([[9264],{1550:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>o,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var t=r(4848),s=r(8453);const a={sidebar_label:"Interrupts"},i="Interrupts",c={id:"concepts/interrupts",title:"Interrupts",description:"In C and C++, you can register a handler function to handle an OS signal: when the signal is caught, the program gets interrupted and the interrupt handler is executed.",source:"@site/docs/04-concepts/11-interrupts.md",sourceDirName:"04-concepts",slug:"/concepts/interrupts",permalink:"/docs/concepts/interrupts",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:11,frontMatter:{sidebar_label:"Interrupts"},sidebar:"tutorialSidebar",previous:{title:"Exception Handling",permalink:"/docs/concepts/exception-handling"},next:{title:"Sleeping",permalink:"/docs/concepts/sleeping"}},d={},l=[{value:"Behavior",id:"behavior",level:2},{value:"Variable Scoping",id:"variable-scoping",level:3},{value:"<code>ExternalEvent</code> Payload",id:"externalevent-payload",level:2},{value:"Scoping",id:"scoping",level:2},{value:"Use Cases",id:"use-cases",level:2}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"interrupts",children:"Interrupts"}),"\n",(0,t.jsx)(n.p,{children:"In C and C++, you can register a handler function to handle an OS signal: when the signal is caught, the program gets interrupted and the interrupt handler is executed."}),"\n",(0,t.jsxs)(n.p,{children:["In LittleHorse, you can handle an ",(0,t.jsx)(n.code,{children:"ExternalEvent"})," and trigger an Interrupt ",(0,t.jsx)(n.code,{children:"ThreadRun"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"behavior",children:"Behavior"}),"\n",(0,t.jsxs)(n.p,{children:["When an ",(0,t.jsx)(n.code,{children:"ExternalEvent"})," is posted to a ",(0,t.jsx)(n.code,{children:"WfRun"}),", and a ",(0,t.jsx)(n.code,{children:"ThreadRun"})," has registered an Interrupt for that specific ",(0,t.jsx)(n.code,{children:"ExternalEventDef"}),", then the affected ",(0,t.jsx)(n.code,{children:"ThreadRun"})," is halted. Once the ",(0,t.jsx)(n.code,{children:"ThreadRun"})," is halted, then a new Child ",(0,t.jsx)(n.code,{children:"ThreadRun"})," (specifically, an Interrupt Handler) is created."]}),"\n",(0,t.jsxs)(n.p,{children:["Once the Interrupt Handler (Child) completes, the Interrupted Thread (Parent) is resumed. If the Interrupt Handler fails, then the Parent also fails with a ",(0,t.jsx)(n.code,{children:"CHILD_FAILED"})," exception. This error is unrecoverable."]}),"\n",(0,t.jsx)(n.h3,{id:"variable-scoping",children:"Variable Scoping"}),"\n",(0,t.jsxs)(n.p,{children:["The Interrupt Handler ",(0,t.jsx)(n.code,{children:"ThreadRun"})," is a Child of the Interrupted ThreadRun. As described in the ",(0,t.jsx)(n.a,{href:"/docs/concepts/child-threads#variable-scoping",children:"Child ThreadRun Docs"}),", this means that the Interrupt Handler has access to all variables in the scope of the interrupted ThreadRun."]}),"\n",(0,t.jsxs)(n.h2,{id:"externalevent-payload",children:[(0,t.jsx)(n.code,{children:"ExternalEvent"})," Payload"]}),"\n",(0,t.jsxs)(n.p,{children:["Recall that an ",(0,t.jsx)(n.code,{children:"ExternalEvent"})," has a payload, which is a ",(0,t.jsx)(n.code,{children:"VariableValue"}),". The Interrupt Handler thread can access that value through the ",(0,t.jsx)(n.code,{children:'"INPUT"'})," ",(0,t.jsx)(n.code,{children:"Variable"}),". Recall from the ",(0,t.jsx)(n.a,{href:"/docs/concepts/exception-handling",children:"Exception Handler Docs"})," that ",(0,t.jsx)(n.code,{children:'"INPUT"'})," is a reserved ",(0,t.jsx)(n.code,{children:"Variable"})," name used for the same purpose."]}),"\n",(0,t.jsx)(n.h2,{id:"scoping",children:"Scoping"}),"\n",(0,t.jsxs)(n.p,{children:["Interrupts are registered at the ",(0,t.jsx)(n.code,{children:"ThreadSpec"})," level. Only one ",(0,t.jsx)(n.code,{children:"ThreadSpec"})," may register an Interrupt for a specific ",(0,t.jsx)(n.code,{children:"ExternalEventDef"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["When a ",(0,t.jsx)(n.code,{children:"ThreadRun"})," is Interrupted, it must first halt. As per the ",(0,t.jsx)(n.a,{href:"/docs/concepts/workflows#lifecycle",children:"WfRun Documentation"}),", a ",(0,t.jsx)(n.code,{children:"ThreadRun"})," is not considered ",(0,t.jsx)(n.code,{children:"HALTED"})," until all of its Children are ",(0,t.jsx)(n.code,{children:"HALTED"})," as well. Therefore, interrupting a ",(0,t.jsx)(n.code,{children:"ThreadRun"})," causes all of the Children of the Interrupted ",(0,t.jsx)(n.code,{children:"ThreadRun"})," to halt as well."]}),"\n",(0,t.jsxs)(n.p,{children:["The Interrupt Handler is a Child of the Interrupted Thread. Therefore, it has read/write access to all of the Interrupted Thread's ",(0,t.jsx)(n.code,{children:"Variable"}),"s."]}),"\n",(0,t.jsx)(n.h2,{id:"use-cases",children:"Use Cases"}),"\n",(0,t.jsx)(n.p,{children:"Interrupts may be used for various reasons, such as to:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Kill a running ",(0,t.jsx)(n.code,{children:"WfRun"})," and perform some cleanup action (such as notifying a customer) before making the Interrupted Thread fail."]}),"\n",(0,t.jsxs)(n.li,{children:["Update the value of some ",(0,t.jsx)(n.code,{children:"Variable"})," in a running ",(0,t.jsx)(n.code,{children:"WfRun"}),", such as to change contact info or add items to a shopping cart."]}),"\n",(0,t.jsxs)(n.li,{children:["Send heartbeats from an external system and allow the ",(0,t.jsx)(n.code,{children:"WfRun"})," to keep track of the last seen activity (such as when determining when to invalidate an access token due to inactivity)."]}),"\n"]})]})}function o(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>c});var t=r(6540);const s={},a=t.createContext(s);function i(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);